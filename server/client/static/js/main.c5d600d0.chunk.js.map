{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radio.Field.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/qaulity.service.js","app/utils/isOutdated.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/generateAuthError.js","app/utils/history.js","app/store/users.js","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/components/ui/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","apiEndpoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","payload","a","post","login","email","password","returnSecureToken","refresh","grant_type","refresh_token","http","configFile","interceptors","request","use","isExpired","now","isFireBase","containSlash","url","slice","idToken","id_token","expires_in","localId","user_id","auth","headers","Authorization","Promise","reject","response","res","content","status","console","log","toast","httpService","get","put","delete","patch","qualityService","fetchAll","isOutdated","date","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualitiesRequested","state","qualitiesReceved","action","qualitiesRequestFiled","qualitiesReducer","reducer","actions","loadQualitiesList","dispatch","getState","qualities","professionService","req","professionsSlice","professionsRequested","professionsReceved","professionsRequestFiled","professionsReducer","userEndpoint","userService","getCurrentUser","update","generetaAuthError","createBrowserHistory","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceved","usersRequestFiled","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","userUpdateSuccessed","findIndex","u","authRequested","usersReducer","createAction","userUpdateFailed","userUpdateRequested","loadUsersList","getUserById","users","find","EditUserPage","setIsLoading","setData","currentUser","useSelector","useDispatch","qualitiesLoading","qualitiesList","q","professions","professionLoading","professionsList","p","setErrors","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfog","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","UserCard","user","location","pathname","src","image","width","role","rate","Quality","color","Qualities","QualitiesCard","MeetingsCard","displayDate","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","Comment","created","created_at","onRemove","currentUserId","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceved","commentsRequestFiled","commetnCreated","commentRemoved","filter","c","commentsReducer","addCommentRequested","removeCommentRequested","Comments","useParams","loadCommentsList","sortedComments","UserPage","completedMeetings","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","toString","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","Profession","prof","getProfessionbyId","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","onDelete","newArray","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","CheckBoxField","LoginForm","stayOn","loginError","dispath","redirect","from","code","errorMessage","RegisterForm","licence","min","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setError","setStatus","progress","setProgress","setCount","summuryCount","incrementCount","newProgress","floor","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","aria-current","ProtectedRoute","Component","render","props","LogOut","AppLoader","usersStatusLoading","App","exact","require","combineReducers","configureStore","rootReducer","store","ReactDOM","StrictMode","document","getElementById"],"mappings":"gKAceA,G,MAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MACnB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACjCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oDCRT,SAASQ,EAAUC,EAAMC,GAC9B,IAAMC,EAAS,GAEf,SAASC,EAASC,EAAgBJ,EAAMC,GACtC,IAAII,EACJ,OAAQD,GACN,IAAK,aAEDC,EADkB,mBAATL,GACSA,EAEe,KAAhBA,EAAKM,OAExB,MAEF,IAAK,UAEHD,GADoB,kBACUE,KAAKP,GACnC,MAEF,IAAK,kBAEHK,GADsB,UACUE,KAAKP,GACrC,MAEF,IAAK,iBAEHK,GADoB,OACUE,KAAKP,GACnC,MAEF,IAAK,MACHK,EAAiBL,EAAKQ,OAASP,EAAOQ,MAM1C,GAAIJ,EAAgB,OAAOJ,EAAOS,QAGpC,IAAK,IAAMC,KAAaX,EACtB,IAAK,IAAMI,KAAkBH,EAAOU,GAAY,CAC9C,IAAMC,EAAQT,EACZC,EACAJ,EAAKW,GACLV,EAAOU,GAAWP,IAEhBQ,IAAUV,EAAOS,KACnBT,EAAOS,GAAaC,GAI1B,OAAOV,E,WChDHW,EAAY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAAY,EAC3BM,oBAAS,GADkB,mBAC5DC,EAD4D,KAC9CC,EAD8C,KAYnE,OACE,sBAAKC,UAAU,OAAf,UACE,wBAAOC,QAASN,EAAhB,cAAwBF,KACxB,sBAAKO,UAAU,6BAAf,UACE,uBACEN,KAAMI,EAAe,OAASJ,EAC9BQ,GAAIP,EACJA,KAAMA,EACNP,MAAOA,EACPQ,SAlBa,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACtBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAkBtCY,UAfC,gBAAkBT,EAAQ,cAAgB,MAkBnC,aAATG,GACC,wBACEM,UAAU,4BACVN,KAAK,SACLU,QApBiB,WACzBL,GAAgB,SAACM,GAAD,OAAgBA,MAgB1B,SAKE,mBACEL,UACE,aAAeF,EAAe,SAAW,QAKhDP,GAAS,qBAAKS,UAAU,oBAAf,SAAoCT,WAKtDC,EAAUc,aAAe,CACvBZ,KAAM,QAWOF,QCKAe,EA5DK,SAAC,GAQd,IAPLd,EAOI,EAPJA,MACAL,EAMI,EANJA,MACAQ,EAKI,EALJA,SACAY,EAII,EAJJA,cACAC,EAGI,EAHJA,QACAlB,EAEI,EAFJA,MACAI,EACI,EADJA,KASMe,EACHC,MAAMC,QAAQH,IAA+B,kBAAZA,EAK9BA,EAJAI,OAAOC,KAAKL,GAASM,KAAI,SAACC,GAAD,MAAiB,CAC1CrB,KAAMc,EAAQO,GAAYrB,KAC1BP,MAAOqB,EAAQO,GAAYC,QAIjC,OACE,sBAAKjB,UAAU,OAAf,UACE,uBAAOC,QAAQ,qBAAqBD,UAAU,aAA9C,SACGP,IAEH,yBACEO,UAjBG,eAAiBT,EAAQ,cAAgB,IAkB5CW,GAAG,qBACHP,KAAMA,EACNP,MAAOA,EACPQ,SAzBe,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACtBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAmB1C,UAOE,wBAAQ8B,UAAQ,EAAC9B,MAAM,GAAvB,SACGoB,IAEFE,GACCA,EAAaK,KAAI,SAACI,GAAD,OACf,wBAAQ/B,MAAO+B,EAAO/B,MAAtB,SACG+B,EAAO1B,OADwB0B,EAAO/B,aAK9CG,GAAS,qBAAKS,UAAU,mBAAf,SAAmCT,QCHpC6B,EA3CI,SAAC,GAA+C,IAA7CX,EAA4C,EAA5CA,QAASd,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAUR,EAAmB,EAAnBA,MAAOK,EAAY,EAAZA,MAC9C4B,EAAe,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACtBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAE9C,OACE,sBAAKY,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,SAA+BP,IAC/B,8BACGgB,EAAQM,KAAI,SAACI,GAAD,OACX,sBAEEnB,UAAU,+BAFZ,UAIE,uBACEA,UAAU,mBACVN,KAAK,QACLC,KAAMA,EACNO,GAAIiB,EAAOxB,KAAO,IAAMwB,EAAO/B,MAC/BkC,QAASH,EAAO/B,QAAUA,EAC1BA,MAAO+B,EAAO/B,MACdQ,SAAUyB,IAEZ,uBACErB,UAAU,mBACVC,QAASkB,EAAOxB,KAAO,IAAMwB,EAAO/B,MAFtC,SAIG+B,EAAOxB,SAhBLwB,EAAOxB,KAAO,IAAMwB,EAAO/B,gB,QC2B7BmC,EApCU,SAAC,GAAsD,IAApDd,EAAmD,EAAnDA,QAASb,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,KAAMF,EAA0B,EAA1BA,MAAO+B,EAAmB,EAAnBA,aACpDd,EACHC,MAAMC,QAAQH,IAA+B,kBAAZA,EAK9BA,EAJAI,OAAOC,KAAKL,GAASM,KAAI,SAACC,GAAD,MAAiB,CAC1CvB,MAAOgB,EAAQO,GAAYrB,KAC3BP,MAAOqB,EAAQO,GAAYC,QAOjC,OACE,sBAAKjB,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,SAA+BP,IAC/B,cAAC,IAAD,CACEgC,SAAO,EACPC,mBAAmB,EACnBF,aAAcA,EACdf,QAASC,EACTV,UAAU,qBACV2B,gBAAgB,SAChB/B,SAbe,SAACR,GACpBQ,EAAS,CAAED,KAAMA,EAAMP,WAanBO,KAAMA,QCdCiC,EAVW,WACxB,IAAMC,EAAUC,cAChB,OACE,yBAAQ9B,UAAU,kBAAkBI,QAAS,kBAAMyB,EAAQE,UAA3D,UACE,mBAAG/B,UAAU,qBADf,qC,gECNEgC,EAAY,YACZC,EAAc,oBACdC,EAAc,cACdC,EAAa,gBAsCnB,IAQeC,EARa,CAC1BC,UArCK,YAKH,IAJFC,EAIC,EAJDA,aACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,OAEC,IADDC,iBACC,MADW,KACX,EACKC,GAAc,IAAIC,MAAOC,UAAwB,IAAZH,EAC3CI,aAAaC,QAAQX,EAAYK,GACjCK,aAAaC,QAAQd,EAAWO,GAChCM,aAAaC,QAAQb,EAAaK,GAClCO,aAAaC,QAAQZ,EAAaQ,IA4BlCK,eAzBK,WACL,OAAOF,aAAaG,QAAQhB,IAyB5BiB,gBAtBK,WACL,OAAOJ,aAAaG,QAAQf,IAsB5BiB,oBAZK,WACL,OAAOL,aAAaG,QAAQd,IAY5BiB,UATK,WACL,OAAON,aAAaG,QAAQb,IAS5BiB,eArBK,WACLP,aAAaQ,WAAWlB,GACxBU,aAAaQ,WAAWrB,GACxBa,aAAaQ,WAAWpB,GACxBY,aAAaQ,WAAWnB,KC1BpBoB,EAAWC,IAAMC,OAAO,CAC5BC,QAAS7E,EAAO8E,YAAc,SAC9BC,OAAQ,CACNC,IAAKC,mIAAYC,0BAyBNC,EArBK,CAClBC,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAC,EAAA,sEACeZ,EAASa,KAAT,SAAwBF,GADvC,uBACAtF,EADA,EACAA,KADA,kBAEDA,GAFC,2CAAF,mDAAC,GAITyF,MAAM,WAAD,4BAAE,mCAAAF,EAAA,6DAASG,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,SACkBhB,EAASa,KAAT,qBAAoC,CACzDE,QACAC,WACAC,mBAAmB,IAJhB,uBACG5F,EADH,EACGA,KADH,kBAMEA,GANF,2CAAF,mDAAC,GAQN6F,QAAQ,WAAD,4BAAE,8BAAAN,EAAA,sEACgBZ,EAASa,KAAK,QAAS,CAC5CM,WAAY,gBACZC,cAAetC,EAAoBa,oBAH9B,uBACCtE,EADD,EACCA,KADD,kBAKAA,GALA,2CAAF,kDAAC,ICjBJgG,EAAOpB,IAAMC,OAAO,CACxBC,QAASmB,EAAWlB,cAGtBiB,EAAKE,aAAaC,QAAQC,IAA1B,uCACE,WAAgBnG,GAAhB,6BAAAsF,EAAA,yDACQxB,EAAcN,EAAoBc,sBAClCZ,EAAeF,EAAoBa,kBACnC+B,EAAY1C,GAAgBI,EAAcC,KAAKsC,OAEjDL,EAAWM,WALjB,oBAMUC,EAAe,QAAQjG,KAAKN,EAAOwG,KACzCxG,EAAOwG,KACJD,EAAevG,EAAOwG,IAAIC,MAAM,GAAI,GAAKzG,EAAOwG,KAAO,SAEtDJ,EAVR,iCAWyBjB,EAAYS,UAXrC,OAWY7F,EAXZ,OAaMyD,EAAoBC,UAAU,CAC5BC,aAAc3D,EAAK+F,cACnBY,QAAS3G,EAAK4G,SACd9C,UAAW9D,EAAK6G,WAChBC,QAAS9G,EAAK+G,UAjBtB,SAoBUnD,EAAcH,EAAoBW,oBAEtCnE,EAAO+E,OAAP,2BAAqB/E,EAAO+E,QAA5B,IAAoCgC,KAAMpD,KAtBhD,4BAyBQyC,EAzBR,kCA0ByBjB,EAAYS,UA1BrC,QA0BY7F,EA1BZ,OA4BMyD,EAAoBC,UAAU1D,GA5BpC,SA8BU4D,EAAcH,EAAoBW,oBAEtCnE,EAAOgH,QAAP,2BACKhH,EAAOgH,SADZ,IAEEC,cAAc,UAAD,OAAYtD,MAlCjC,iCAsCS3D,GAtCT,4CADF,uDAyCE,SAAUW,GACR,OAAOuG,QAAQC,OAAOxG,MAY1BoF,EAAKE,aAAamB,SAASjB,KACzB,SAACkB,GATH,IAAsBtH,EAclB,OAJIiG,EAAWM,aACbe,EAAItH,KAAO,CAAEuH,SAXGvH,EAWmBsH,EAAItH,KAVpCA,IAASA,EAAKsC,IACjBJ,OAAOC,KAAKnC,GAAMoC,KAAI,SAAC6C,GAAD,sBACnBjF,EAAKiF,OAERjF,KAQFsH,EAAItH,KAAO,CAAEuH,QAASD,EAAItH,MACnBsH,KAET,SAAU1G,GAUR,OAREA,EAAMyG,UACNzG,EAAMyG,SAASG,QAAU,KACzB5G,EAAMyG,SAASG,OAAS,MAGxBC,QAAQC,IAAI9G,GACZ+G,IAAM/G,MAAM,qCAEPuG,QAAQC,OAAOxG,MAG1B,IAOegH,EAPK,CAClBC,IAAK7B,EAAK6B,IACVrC,KAAMQ,EAAKR,KACXsC,IAAK9B,EAAK8B,IACVC,OAAQ/B,EAAK+B,OACbC,MAAOhC,EAAKgC,OCjFCC,EANQ,CACrBC,SAAS,WAAD,4BAAE,8BAAA3C,EAAA,sEACeqC,EAAYC,IAJf,YAGZ,uBACA7H,EADA,EACAA,KADA,kBAEDA,GAFC,2CAAF,kDAAC,ICEImI,MAPf,SAAoBC,GAClB,OAAIpE,KAAKsC,MAAQ8B,EAAO,KCGpBC,EAAiBC,sBAAY,CACjCtH,KAAM,YACNuH,aAAc,CACZC,SAAU,KACVC,WAAW,EACX7H,MAAO,KACP8H,UAAW,MAEbC,SAAU,CACRC,mBAAoB,SAACC,GACnBA,EAAMJ,WAAY,GAEpBK,iBAAkB,SAACD,EAAOE,GACxBF,EAAML,SAAWO,EAAOzD,QACxBuD,EAAMH,UAAY1E,KAAKsC,MACvBuC,EAAMJ,WAAY,GAEpBO,sBAAuB,SAACH,EAAOE,GAC7BF,EAAMjI,MAAQmI,EAAOzD,QACrBuD,EAAMJ,WAAY,MAKPQ,EAA8BZ,EAAvCa,QAA2BC,EAAYd,EAAZc,QAC3BP,EAAgEO,EAAhEP,mBAAoBE,EAA4CK,EAA5CL,iBAAkBE,EAA0BG,EAA1BH,sBAEjCI,EAAoB,yDAAM,WAAOC,EAAUC,GAAjB,mBAAA/D,EAAA,yDAC7BmD,EAAcY,IAAWC,UAAzBb,WACJP,EAAWO,GAFsB,wBAGnCW,EAAST,KAH0B,kBAKPX,EAAeC,WALR,gBAKzBX,EALyB,EAKzBA,QACR8B,EAASP,EAAiBvB,IANO,kDAQjC8B,EAASL,EAAsB,KAAMtI,UARJ,0DAAN,yDAgClBuI,ICrDAO,EANW,CACxB3B,IAAI,WAAD,4BAAE,4BAAAtC,EAAA,sEACeqC,EAAYC,IAJP,eAGpB,cACG4B,EADH,yBAEIA,EAAIzJ,MAFR,2CAAF,kDAAC,ICDA0J,EAAmBpB,sBAAY,CACnCtH,KAAM,cACNuH,aAAc,CACZC,SAAU,KACVC,WAAW,EACX7H,MAAO,KACP8H,UAAW,MAEbC,SAAU,CACRgB,qBAAsB,SAACd,GACrBA,EAAMJ,WAAY,GAEpBmB,mBAAoB,SAACf,EAAOE,GAC1BF,EAAML,SAAWO,EAAOzD,QACxBuD,EAAMH,UAAY1E,KAAKsC,MACvBuC,EAAMJ,WAAY,GAEpBoB,wBAAyB,SAAChB,EAAOE,GAC/BF,EAAMjI,MAAQmI,EAAOzD,QACrBuD,EAAMJ,WAAY,MAKPqB,EAAgCJ,EAAzCR,QAA6BC,EAAYO,EAAZP,QAC7BQ,GACNR,EADMQ,qBAAsBC,GAC5BT,EAD4BS,mBAAoBC,GAChDV,EADgDU,wBAwBnCC,KClDTC,GAAe,QA4BNC,GA1BK,CAClBnC,IAAI,WAAD,4BAAE,8BAAAtC,EAAA,sEACoBqC,EAAYC,IAAIkC,IADpC,uBACK/J,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,GAIJ6E,OAAO,WAAD,4BAAE,WAAOS,GAAP,iBAAAC,EAAA,sEACiBqC,EAAYE,IACjCiC,GAAezE,EAAQhD,IACvBgD,GAHI,uBACEtF,EADF,EACEA,KADF,kBAKCA,GALD,2CAAF,mDAAC,GAOPiK,eAAe,WAAD,4BAAE,8BAAA1E,EAAA,sEACSqC,EAAYC,IACjCkC,GAAetG,EAAoBe,aAFvB,uBACNxE,EADM,EACNA,KADM,kBAIPA,GAJO,2CAAF,kDAAC,GAMfkK,OAAO,WAAD,4BAAE,WAAO5E,GAAP,iBAAAC,EAAA,sEACiBqC,EAAYI,MACjC+B,GAAetG,EAAoBe,YACnCc,GAHI,uBACEtF,EADF,EACEA,KADF,kBAKCA,GALD,2CAAF,mDAAC,ICvBF,SAASmK,GAAkBzJ,GAChC,OAAQA,GACN,IAAK,mBACH,MAAO,8KACT,IAAK,eACH,MAAO,uMACT,QACE,MAAO,gQ,aCJEwC,GADCkH,eCKV7B,GAAe9E,EAAoBW,iBACrC,CACAoE,SAAU,KACVC,WAAW,EACX7H,MAAO,KACPoG,KAAM,CAAEnD,OAAQJ,EAAoBe,aACpC6F,YAAY,EACZC,YAAY,GAEZ,CACA9B,SAAU,KACVC,WAAW,EACX7H,MAAO,KACPoG,KAAM,KACNqD,YAAY,EACZC,YAAY,GAGVC,GAAajC,sBAAY,CAC7BtH,KAAM,QACNuH,gBACAI,SAAU,CACR6B,eAAgB,SAAC3B,GACfA,EAAMJ,WAAY,GAEpBgC,aAAc,SAAC5B,EAAOE,GACpBF,EAAML,SAAWO,EAAOzD,QACxBuD,EAAMyB,YAAa,EACnBzB,EAAMJ,WAAY,GAEpBiC,kBAAmB,SAAC7B,EAAOE,GACzBF,EAAMjI,MAAQmI,EAAOzD,QACrBuD,EAAMJ,WAAY,GAEpBkC,mBAAoB,SAAC9B,EAAOE,GAC1BF,EAAM7B,KAAO+B,EAAOzD,QACpBuD,EAAMwB,YAAa,GAErBO,kBAAmB,SAAC/B,EAAOE,GACzBF,EAAMjI,MAAQmI,EAAOzD,SAEvBuF,YAAa,SAAChC,EAAOE,GACnBF,EAAML,SAASsC,KAAK/B,EAAOzD,UAE7ByF,cAAe,SAAClC,GACdA,EAAML,SAAW,KACjBK,EAAMwB,YAAa,EACnBxB,EAAM7B,KAAO,KACb6B,EAAMyB,YAAa,GAErBU,oBAAqB,SAACnC,EAAOE,GAC3BF,EAAML,SACJK,EAAML,SAASyC,WAAU,SAACC,GAAD,OAAOA,EAAE5I,MAAQyG,EAAOzD,QAAQhD,QACrDyG,EAAOzD,SAEf6F,cAAe,SAACtC,GACdA,EAAMjI,MAAQ,SAKHwK,GAA0Bb,GAAnCrB,QAAuBC,GAAYoB,GAAZpB,QAE7BqB,GAOErB,GAPFqB,eACAC,GAMEtB,GANFsB,aACAC,GAKEvB,GALFuB,kBACAE,GAIEzB,GAJFyB,kBACAD,GAGExB,GAHFwB,mBACAI,GAEE5B,GAFF4B,cACAC,GACE7B,GADF6B,oBAGIG,GAAgBE,uBAAa,uBAC7BC,GAAmBD,uBAAa,0BAChCE,GAAsBF,uBAAa,6BAyC5BG,GAAgB,yDAAM,WAAOnC,GAAP,iBAAA9D,EAAA,6DACjC8D,EAASmB,MADwB,kBAGLR,GAAYnC,MAHP,gBAGvBN,EAHuB,EAGvBA,QACR8B,EAASoB,GAAalD,IAJS,gDAM/B8B,EAASqB,GAAkB,KAAMhK,UANF,yDAAN,uDA0BhB+K,GAAc,SAAC5H,GAAD,OAAY,SAACgF,GACtC,GAAIA,EAAM6C,MAAMlD,SACd,OAAOK,EAAM6C,MAAMlD,SAASmD,MAAK,SAACT,GAAD,OAAOA,EAAE5I,MAAQuB,OASvCuH,MC7JAQ,GCgBM,WAAO,IAAD,EACS1K,oBAAS,GADlB,mBAClBuH,EADkB,KACPoD,EADO,OAED3K,qBAFC,mBAElBlB,EAFkB,KAEZ8L,EAFY,KAGnBC,EAAcC,aF0HkB,SAACnD,GACvC,OAAOA,EAAM6C,MAAMlD,SACfK,EAAM6C,MAAMlD,SAASmD,MAAK,SAACT,GAAD,OAAOA,EAAE5I,MAAQuG,EAAM6C,MAAM1E,KAAKnD,UAC5D,QE5HEwF,EAAW4C,cACX1C,EAAYyC,aRqBc,SAACnD,GAAD,OAAWA,EAAMU,UAAUf,YQpBrD0D,EAAmBF,aRqBoB,SAACnD,GAAD,OAC7CA,EAAMU,UAAUd,aQrBV0D,EAAgB5C,EAAUnH,KAAI,SAACgK,GAAD,MAAQ,CAC1CtL,MAAOsL,EAAEpL,KACTP,MAAO2L,EAAE9J,QAEL+J,EAAcL,aNgBc,SAACnD,GAAD,OAAWA,EAAMwD,YAAY7D,YMfzD8D,EAAoBN,aNgBqB,SAACnD,GAAD,OAC/CA,EAAMwD,YAAY5D,aMhBZ8D,EAAkBF,EAAYjK,KAAI,SAACoK,GAAD,MAAQ,CAC9C1L,MAAO0L,EAAExL,KACTP,MAAO+L,EAAElK,QAfc,EAkBGpB,mBAAS,IAlBZ,mBAkBlBhB,EAlBkB,KAkBVuM,EAlBU,KA6CzB,IAAMC,EAAgB,SAAC1M,GAMrB,OAnBF,SAA+B2M,GAC7B,IAD2C,EACrCC,EAAiB,GADoB,cAEtBD,GAFsB,IAE3C,2BAAmC,CAAC,IAAD,EAAxBE,EAAwB,sBACXtD,GADW,IACjC,2BAAiC,CAAC,IAAvBuD,EAAsB,QAC/B,GAAIA,EAAQxK,MAAQuK,EAAQ,CAC1BD,EAAe9B,KAAKgC,GACpB,QAJ6B,gCAFQ,8BAU3C,OAAOF,EAIQG,CAAsB/M,GAAMoC,KAAI,SAAC4K,GAAD,MAAW,CACxDlM,MAAOkM,EAAKhM,KACZP,MAAOuM,EAAK1K,SAKhB2K,qBAAU,WACHX,GAAsBJ,IAAoBH,GAAgB/L,GAC7D8L,EAAQ,2BACHC,GADE,IAELxC,UAAWmD,EAAcX,EAAYxC,gBAGxC,CAAC+C,EAAmBJ,EAAkBH,EAAa/L,IACtDiN,qBAAU,WACJjN,GAAQyI,GACVoD,GAAa,KAEd,CAAC7L,IAEJ,IAAMkN,EAAkB,CACtBxH,MAAO,CACLyH,WAAY,CACVzM,QAAS,wPAEX0M,QAAS,CACP1M,QAAS,kHAIbM,KAAM,CACJmM,WAAY,CACVzM,QAAS,4FAIfuM,qBAAU,kBAAM9M,MAAY,CAACH,IAC7B,IAAM0C,EAAe,SAAClB,GACpBsK,GAAQ,SAACpK,GAAD,mBAAC,eACJA,GADG,kBAELF,EAAOR,KAAOQ,EAAOf,YAGpBN,EAAW,WACf,IAAMD,EAASH,EAAUC,EAAMkN,GAE/B,OADAT,EAAUvM,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,QAEvB6M,EAAyC,IAA/BnL,OAAOC,KAAKjC,GAAQM,OACpC,OACE,sBAAKa,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,kCAAf,UACIoH,GAAavG,OAAOC,KAAKkK,GAAa7L,OAAS,EAC/C,uBAAM8M,SAlFK,SAACC,GAEpB,IF2FuBjI,GE5FvBiI,EAAEC,iBACcrN,MAEhBkJ,GFyFuB/D,EExFV,2BACNtF,GADK,IAERuJ,UAAWvJ,EAAKuJ,UAAUnH,KAAI,SAACgK,GAAD,OAAOA,EAAE3L,WFsFrB,uCAAa,WAAO4I,GAAP,iBAAA9D,EAAA,6DACrC8D,EAASkC,MAD4B,kBAGTvB,GAAYE,OAAO5E,GAHV,gBAG3BiC,EAH2B,EAG3BA,QACR8B,EAAS2B,GAAoBzD,IAC7BrE,GAAQ4H,KAAR,iBAAuBvD,EAAQjF,MALI,kDAOnC+G,EAASiC,GAAiB,KAAM5K,UAPG,0DAAb,yDEXd,UACE,cAAC,EAAD,CACEI,MAAM,qBACNE,KAAK,OACLP,MAAOT,EAAKgB,KACZC,SAAUyB,EACV9B,MAAOV,EAAOc,OAEhB,cAAC,EAAD,CACEF,MAAM,oGACNE,KAAK,QACLP,MAAOT,EAAK0F,MACZzE,SAAUyB,EACV9B,MAAOV,EAAOwF,QAEhB,cAAC,EAAD,CACE5E,MAAM,uHACNe,cAAc,YACdb,KAAK,aACLc,QAASyK,EACTtL,SAAUyB,EACVjC,MAAOT,EAAKyN,WACZ7M,MAAOV,EAAOuN,aAEhB,cAAC,EAAD,CACE3L,QAAS,CACP,CAAEd,KAAM,OAAQP,MAAO,QACvB,CAAEO,KAAM,SAAUP,MAAO,UACzB,CAAEO,KAAM,QAASP,MAAO,UAE1BA,MAAOT,EAAK0N,IACZ1M,KAAK,MACLC,SAAUyB,EACV5B,MAAM,2FAER,cAAC,EAAD,CACE+B,aAAc7C,EAAKuJ,UACnBzH,QAASqK,EACTlL,SAAUyB,EACV1B,KAAK,YACLF,MAAM,+HAER,wBACEC,KAAK,SACLwB,UAAW8K,EACXhM,UAAU,gCAHZ,iEASF,qBClHGsM,GAnDE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ1K,EAAUC,cAEV4I,EAAcC,aHsIkB,SAACnD,GACvC,OAAOA,EAAM6C,MAAMlD,SACfK,EAAM6C,MAAMlD,SAASmD,MAAK,SAACT,GAAD,OAAOA,EAAE5I,MAAQuG,EAAM6C,MAAM1E,KAAKnD,UAC5D,QGrIJ,OACE,qBAAKxC,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACG0K,EAAYzJ,MAAQsL,EAAKtL,KACxB,wBACEjB,UAAU,qDACVI,QATU,WAClByB,EAAQ4H,KAAK5H,EAAQ2K,SAASC,SAAW,UAMnC,SAIE,mBAAGzM,UAAU,iBAIjB,sBAAKA,UAAU,sEAAf,UACE,qBACE0M,IAAKH,EAAKI,MACV3M,UAAU,iBACV4M,MAAM,QAER,sBAAK5M,UAAU,OAAf,UACE,6BAAKuM,EAAK5M,OACV,mBAAGK,UAAU,sBAAb,SACGuM,EAAKH,WAAWzM,OAEnB,sBAAKK,UAAU,aAAf,UACE,mBACEA,UAAU,qCACV6M,KAAK,WAEP,mBACE7M,UAAU,gCACV6M,KAAK,WAEP,sBAAM7M,UAAU,OAAhB,SAAwBuM,EAAKO,sBC5B5BC,GAdC,SAAC,GAA0B,IAAxB9L,EAAuB,EAAvBA,IAAK+L,EAAkB,EAAlBA,MAAOrN,EAAW,EAAXA,KAC7B,OACE,sBAAMK,UAAW,gBAAkBgN,EAAnC,SACSrN,GADsCsB,ICHpCgM,GCQO,SAAC,GAAmB,IZqCT3B,EYrCRpD,EAAgB,EAAhBA,UACjBF,EAAW4C,cACXxD,EAAYuD,aZiC2B,SAACnD,GAAD,OAC7CA,EAAMU,UAAUd,aYjCV0D,EAAgBH,aZkCSW,EYlCoBpD,EZkCH,SAACV,GACjD,GAAIA,EAAMU,UAAUf,SAAU,CAC5B,IAD4B,EACtBoE,EAAiB,GADK,cAEPD,GAFO,IAE5B,2BAAmC,CAAC,IAAD,EAAxBE,EAAwB,sBACXhE,EAAMU,UAAUf,UADL,IACjC,2BAAgD,CAAC,IAAtCsE,EAAqC,QAC9C,GAAIA,EAAQxK,MAAQuK,EAAQ,CAC1BD,EAAe9B,KAAKgC,GACpB,QAJ6B,gCAFP,8BAU5B,OAAOF,EAET,MAAO,MY1CP,OAJAK,qBAAU,WACR5D,EAASD,OACR,IAECX,EAAkB,cAGpB,mCACG0D,EAAc/J,KAAI,SAAC4K,GAAD,OACjB,cAAC,GAAD,eAA4BA,GAAdA,EAAK1K,WCDZiM,GAlBO,SAAC,GAAc,IAAZvO,EAAW,EAAXA,KACvB,OACE,qBAAKqB,UAAU,YAAf,SACE,sBAAKA,UAAU,kEAAf,UACE,oBAAIA,UAAU,aAAd,SACE,+CAEF,mBAAGA,UAAU,YAAb,SACE,cAAC,GAAD,CAAWkI,UAAWvJ,YCQjBwO,GAjBM,SAAC,GAAe,IAAb/N,EAAY,EAAZA,MACtB,OACE,qBAAKY,UAAU,YAAf,SACE,sBAAKA,UAAU,kEAAf,UACE,oBAAIA,UAAU,aAAd,SACE,wDAGF,oBAAIA,UAAU,YAAd,SAA2BZ,U,oBCX5B,SAASgO,GAAYzO,GAC1B,IAAMoI,EAAO,IAAIpE,KAAKhE,GAChB0O,EAAU,IAAI1K,KAEpB,GAAgB,IADA0K,EAAQC,cAAgBvG,EAAKuG,cAC1B,CAEjB,GAAe,IADAD,EAAQE,SAAWxG,EAAKwG,SACrB,CAEhB,GAAgB,IADAF,EAAQG,WAAazG,EAAKyG,WACvB,CACjB,IAAMC,EAAaJ,EAAQK,aAAe3G,EAAK2G,aAE/C,OAAID,GAAc,GAAKA,EAAa,EAAU,wEAC1CA,GAAc,GAAKA,EAAa,GAAW,kEAC3CA,GAAc,IAAMA,EAAa,GAC5B,mEAEF,mEAET,MAAM,GAAN,OAAU1G,EAAKyG,WAAf,YAA6BzG,EAAK2G,cAGpC,MAAM,GAAN,OAAU3G,EAAKwG,SAAf,YAA2BxG,EAAK4G,eAAe,UAAW,CACxDC,MAAO,UAGX,OACE7G,EAAKuG,cAAgB,KAAOvG,EAAK8G,WAAa,GAAK,IAAM9G,EAAK+G,UCpBlE,IA0DeC,GA1DC,SAAC,GAMV,IALL7H,EAKI,EALJA,QACY8H,EAIR,EAJJC,WACK/N,EAGD,EAHJe,IACAuB,EAEI,EAFJA,OACA0L,EACI,EADJA,SAEMC,EAAgBxD,aVgJc,SAACnD,GAAD,OAAWA,EAAM6C,MAAM1E,KAAKnD,UU/I1D+J,EAAO5B,YAAYP,GAAY5H,IAErC,OACE,qBAAKxC,UAAU,2BAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBACE0M,IAAKH,EAAKI,MACV3M,UAAU,sCACVoO,IAAI,SACJxB,MAAM,KACNyB,OAAO,OAET,qBAAKrO,UAAU,4BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,oBAAGA,UAAU,QAAb,UACGuM,GAAQA,EAAK5M,KAAM,IACpB,uBAAMK,UAAU,QAAhB,eAC2BoN,GAAYY,SAGxCG,IAAkB3L,GACjB,wBACExC,UAAU,oDACVI,QAAS,kBAAM8N,EAAShO,IAF1B,SAIE,mBAAGF,UAAU,oBAInB,mBAAGA,UAAU,aAAb,SAA2BkG,mBC/B5BoI,GAVM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUL,EAAe,EAAfA,SAChC,OAAOK,EAASxN,KAAI,SAACyN,GAAD,OAClB,cAAC,GAAD,2BAA+BA,GAA/B,IAAwCN,SAAUA,IAApCM,EAAQvN,SCJpBwN,GAAgB,SAAC,GAA6C,IAA3ChP,EAA0C,EAA1CA,MAAOE,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAQrD,OACE,sBAAKS,UAAU,OAAf,UACE,wBAAOC,QAASN,EAAhB,cAAwBF,KACxB,sBAAKO,UAAU,6BAAf,UACU,0BACEE,GAAIP,EACJA,KAAMA,EACNP,MAAOA,EACPQ,SAfK,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACtBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAe9BY,UAZP,gBAAkBT,EAAQ,cAAgB,MAe5CA,GAAS,qBAAKS,UAAU,oBAAf,SAAoCT,WAKtDkP,GAAcnO,aAAe,CAC3BZ,KAAM,QAWO+O,UCwBAC,GA3DQ,SAAC,GAAkB,IAAhBzC,EAAe,EAAfA,SAAe,EACfpM,mBAAS,IADM,mBAChClB,EADgC,KAC1B8L,EAD0B,OAEX5K,mBAAS,IAFE,mBAEhChB,EAFgC,KAExBuM,EAFwB,KASjCS,EAAkB,CACtB3F,QAAS,CACP4F,WAAY,CACVzM,QAAS,sKAyBf,OACE,gCACE,6CACA,uBAAM4M,SAZW,SAACC,GACpBA,EAAEC,iBAZa,WACf,IAAMtN,EAASH,EAAUC,EAAMkN,GAG/B,OADAT,EAAUvM,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,OASXL,KAEhBmN,EAAStN,GACTyH,QAAQC,IAAI1H,GARZ8L,EAAQ,IACRW,EAAU,MAcR,UACE,cAAC,GAAD,CACEhM,MAAOT,EAAKuH,SAAW,GACvBtG,SAxCa,SAACO,GACpBsK,GAAQ,SAACpK,GAAD,mBAAC,eACJA,GADG,kBAELF,EAAOR,KAAOQ,EAAOf,YAsClBO,KAAK,UACLF,MAAM,yDACNF,MAAOV,EAAOqH,UAEhB,qBAAKlG,UAAU,6BAAf,SACE,wBAAQA,UAAU,kBAAlB,+FCnDKsO,MCDTK,GAAkB,WAwBTC,GAtBQ,CACrBC,cAAc,WAAD,4BAAE,WAAO5K,GAAP,iBAAAC,EAAA,sEACUqC,EAAYpC,KACjCwK,GACA1K,GAHW,uBACLtF,EADK,EACLA,KADK,kBAKNA,GALM,2CAAF,mDAAC,GAOdmQ,YAAY,WAAD,4BAAE,WAAOC,GAAP,iBAAA7K,EAAA,sEACYqC,EAAYC,IAAImI,GAAiB,CACtDhL,OAAQ,CACNqL,QAAS,SACTC,QAAQ,GAAD,OAAKF,MAJL,uBACHpQ,EADG,EACHA,KADG,kBAOJA,GAPI,2CAAF,mDAAC,GASZuQ,cAAc,WAAD,4BAAE,WAAOC,GAAP,iBAAAjL,EAAA,sEACUqC,EAAYG,OAAOiI,GAAkBQ,GAD/C,uBACLxQ,EADK,EACLA,KADK,kBAENA,GAFM,2CAAF,mDAAC,IClBVyQ,GAAgBnI,sBAAY,CAChCtH,KAAM,WACNuH,aAAc,CACZC,SAAU,KACVC,WAAW,EACX7H,MAAO,MAET+H,SAAU,CACR+H,kBAAmB,SAAC7H,GAClBA,EAAMJ,WAAY,GAEpBkI,gBAAiB,SAAC9H,EAAOE,GACvBF,EAAML,SAAWO,EAAOzD,QACxBuD,EAAMJ,WAAY,GAEpBmI,qBAAsB,SAAC/H,EAAOE,GAC5BF,EAAMjI,MAAQmI,EAAOzD,QACrBuD,EAAMJ,WAAY,GAEpBoI,eAAgB,SAAChI,EAAOE,GACtBF,EAAML,SAASsC,KAAK/B,EAAOzD,UAE7BwL,eAAgB,SAACjI,EAAOE,GACtBF,EAAML,SAAWK,EAAML,SAASuI,QAC9B,SAACC,GAAD,OAAOA,EAAE1O,MAAQyG,EAAOzD,eAMf2L,GAA6BR,GAAtCvH,QAA0BC,GAAYsH,GAAZtH,QAEhCuH,GAKEvH,GALFuH,kBACAC,GAIExH,GAJFwH,gBACAC,GAGEzH,GAHFyH,qBACAC,GAEE1H,GAFF0H,eACAC,GACE3H,GADF2H,eAGII,GAAsB7F,uBAAa,gCACnC8F,GAAyB9F,uBAAa,mCAoC7B4F,MCvBAG,GA3CE,WAAO,IACdvN,EAAWwN,cAAXxN,OACFwF,EAAW4C,cACjBgB,qBAAU,WACR5D,ED4B4B,SAACxF,GAAD,8CAAY,WAAOwF,GAAP,iBAAA9D,EAAA,6DAC1C8D,EAASqH,MADiC,kBAGdT,GAAeE,YAAYtM,GAHb,gBAGhC0D,EAHgC,EAGhCA,QACR8B,EAASsH,GAAgBpJ,IAJe,gDAMxC8B,EAASuH,GAAqB,KAAMlQ,UANI,yDAAZ,sDC5BnB4Q,CAAiBzN,MACzB,CAACA,IACJ,IAAM4E,EAAYuD,aDyD0B,SAACnD,GAAD,OAC5CA,EAAM+G,SAASnH,aCxDTmH,EAAW5D,aDsDc,SAACnD,GAAD,OAAWA,EAAM+G,SAASpH,YC/CnD+I,EAAiBlB,mBAAQT,EAAU,CAAC,cAAe,CAAC,SAC1D,OACE,qCACE,qBAAKvO,UAAU,YAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAAC,GAAD,CAAgBiM,SAXH,SAACtN,GDgCK,IAACsF,EC/B1B+D,GD+B0B/D,EC/BH,2BAAKtF,GAAN,IAAYoQ,OAAQvM,ID+BjB,uCAAa,WAAOwF,EAAUC,GAAjB,iBAAA/D,EAAA,6DACxC8D,EAAS6H,MAD+B,kBAGZjB,GAAeC,cAAc5K,GAHjB,gBAG9BiC,EAH8B,EAG9BA,QACR8B,EAASwH,GAAetJ,IAJc,gDAMtC8B,EAASuH,GAAqB,KAAMlQ,UANE,yDAAb,iEClBtB6Q,EAAe/Q,OAAS,GACvB,qBAAKa,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0CACA,uBACEoH,EAMA,aALA,cAAC,GAAD,CACEmH,SAAU2B,EACVhC,SAnBc,SAAChO,GDsCF,IAACiP,ECrC1BnH,GDqC0BmH,ECrCHjP,EDqCE,uCAAe,WAAO8H,GAAP,SAAA9D,EAAA,6DAC1C8D,EAAS8H,MADiC,kBAGdlB,GAAeM,cAAcC,GAHf,cAGhCjJ,SAEN8B,EAASyH,GAAeN,IALc,gDAQxCnH,EAASuH,GAAqB,KAAMlQ,UARI,yDAAf,oEE7Dd8Q,GCQE,SAAC,GAAgB,IAAd3N,EAAa,EAAbA,OACZ+J,EAAO5B,YAAYP,GAAY5H,IAErC,OAAI+J,EAEA,qBAAKvM,UAAU,YAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,GAAD,CAAUuM,KAAMA,IAChB,cAAC,GAAD,CAAe5N,KAAM4N,EAAKrE,YAC1B,cAAC,GAAD,CAAc9I,MAAOmN,EAAK6D,uBAE5B,qBAAKpQ,UAAU,WAAf,SACE,cAAC,GAAD,WAMD,0CCzBX,IAqCeqQ,GArCI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAClDC,EAAaC,KAAKC,KAAKN,EAAaC,GACpCM,EAAQC,KAAEC,MAAM,EAAGL,EAAa,GAEtC,OAAmB,IAAfA,EAAyB,KAE3B,8BACE,oBAAI1Q,UAAU,aAAd,SACG6Q,EAAM9P,KAAI,SAACiQ,GAAD,OACT,oBAEEhR,UACE,cACCgR,IAASP,EAAc,SAAW,IAJvC,SAOE,mBACEzQ,UAAU,YACVI,QAAS,WACPoQ,EAAaQ,IAHjB,SAMGA,KAZEA,WCXXC,GAAY,SAAC,GAMZ,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OAAK3Q,MAAMC,QAAQsQ,GAoBjB,oBAAIlR,UAAU,aAAd,SACGkR,EAAMnQ,KAAI,SAACwQ,GAAD,OACT,oBAEEvR,UACE,mBACCuR,IAASD,EAAe,UAAY,IAEvClR,QAAS,kBAAMiR,EAAaE,IAC5B1E,KAAK,SAPP,SASG0E,EAAKH,IARDG,EAAKJ,SArBd,oBAAInR,UAAU,aAAd,SACGa,OAAOC,KAAKoQ,GAAOnQ,KAAI,SAACwQ,GAAD,OACtB,oBAEEvR,UACE,mBACCkR,EAAMK,KAAUD,EAAe,UAAY,IAE9ClR,QAAS,kBAAMiR,EAAaH,EAAMK,KAClC1E,KAAK,SAPP,SASGqE,EAAMK,GAAMH,IARRF,EAAMK,GAAMJ,UAgC7BF,GAAU3Q,aAAe,CACvB6Q,cAAe,MACfC,gBAAiB,QAUJH,UC9BAO,GA1BM,SAAC,GAAgB,IAAdrS,EAAa,EAAbA,OAUtB,OACE,6BACQ,sBACEa,UAAW,UAAYb,EAAS,EAAI,aAAe,aADrD,SAGKA,EAAS,EAAT,UACMA,EAAS,IAfT,SAACsS,GACpB,IAAMC,EAAUC,OAAOF,EAAOG,WAAWvM,OAAO,IAChD,OAAIoM,EAAS,GAAKA,EAAS,IAGX,IAAZC,EAFK,wFAGL,CAAC,EAAG,EAAG,GAAGG,QAAQH,IAAY,EAAU,8FACrC,wFAQ2BI,CAAa3S,GADlC,uFAEG,oI,SCNL4S,GAXE,SAAC,GAAyB,IAAvB5L,EAAsB,EAAtBA,OAAW6L,EAAW,2BACxC,OACE,kDAAYA,GAAZ,aACE,mBAAGhS,UAAW,kBAAoBmG,EAAS,cAAgB,UC2BlD8L,GA7BG,SAAC,GAAuB,IAArBtT,EAAoB,EAApBA,KAAMuT,EAAc,EAAdA,QACnBC,EAAgB,SAACZ,EAAMa,GAC3B,GAAIF,EAAQE,GAAQC,UAAW,CAC7B,IAAMA,EAAYH,EAAQE,GAAQC,UAClC,MAAyB,oBAAdA,EACFA,EAAUd,GAEZc,EAET,OAAOvB,KAAEtK,IAAI+K,EAAMW,EAAQE,GAAQE,OAErC,OACE,gCACC3T,EAAKoC,KAAI,SAACwQ,GAAD,OACR,6BACG1Q,OAAOC,KAAKoR,GAASnR,KAAI,SAACqR,GAAD,OACxB,6BAAkBD,EAAcZ,EAAMa,IAA7BA,OAFJb,EAAKtQ,WCmCLsR,GAlDK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,aAAcP,EAAc,EAAdA,QAWrCQ,EAAiB,SAACD,EAAcE,GACpC,OAAIF,EAAaH,OAASK,EACG,QAAvBF,EAAaG,MACR,mBAAG5S,UAAU,0BAEb,mBAAGA,UAAU,wBAGjB,MAGT,OACE,gCACA,6BACGa,OAAOC,KAAKoR,GAASnR,KAAI,SAACqR,GAAD,OACxB,qBAEEhS,QACE8R,EAAQE,GAAQE,KACZ,kBA7BMf,EA6BWW,EAAQE,GAAQE,UA5BzCG,EAAaH,OAASf,EACxBiB,EAAO,2BACFC,GADC,IAEJG,MAA8B,QAAvBH,EAAaG,MAAkB,OAAS,SAGjDJ,EAAO,CAAEF,KAAMf,EAAMqB,MAAO,SAPb,IAACrB,QA8BNsB,EAEAhG,KAAMqF,EAAQE,GAAQE,MAAQ,SACpCQ,MAAM,MARR,UAUGZ,EAAQE,GAAQzS,KAAM,IACtB+S,EAAeD,EAAcP,EAAQE,GAAQE,QAVzCF,WC1BAW,GCCD,SAAC,GAAuD,IAArDP,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,aAAcP,EAA8B,EAA9BA,QAASvT,EAAqB,EAArBA,KAAMqU,EAAe,EAAfA,SACpD,OACE,uBAAOhT,UAAU,QAAjB,SACGgT,GACC,qCACE,cAAC,GAAD,CAAmBR,SAAQC,eAAcP,YACzC,cAAC,GAAD,CAAiBA,UAASvT,e,SCOrBsU,GAVI,SAAC,GAAY,IAAV/S,EAAS,EAATA,GACdkH,EAAYuD,ahCqC6B,SAACnD,GAAD,OAC/CA,EAAMwD,YAAY5D,agCrCZ8L,EAAOvI,YhCsCkB,SAACzK,GAAD,OAAQ,SAACsH,GACxC,GAAIA,EAAMwD,YAAY7D,SACpB,OAAOK,EAAMwD,YAAY7D,SAASmD,MAAK,SAACa,GAAD,OAAOA,EAAElK,MAAQf,MgCxCjCiT,CAAkBjT,IAC3C,OAAKkH,EAES,cADL,4BAAI8L,EAAKvT,QCqDLyT,GAxDG,SAAC,GAMZ,IALL/I,EAKI,EALJA,MACAmI,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAY,EAEI,EAFJA,iBAGMnB,GADF,qEACY,CACdvS,KAAM,CACJ2S,KAAM,OACN3S,KAAM,qBACN0S,UAAW,SAAC9F,GAAD,OACT,cAAC,KAAD,CAAM+G,GAAE,iBAAY/G,EAAKtL,KAAzB,SAAiCsL,EAAK5M,SAG1CuI,UAAW,CACTvI,KAAM,mDACN0S,UAAW,SAAC9F,GAAD,OAAU,cAAC,GAAD,CAAWrE,UAAWqE,EAAKrE,cAElD8C,YAAa,CACXrL,KAAM,yDACN0S,UAAW,SAAC9F,GAAD,OAAU,cAAC,GAAD,CAAYrM,GAAIqM,EAAKH,eAE5CgE,kBAAmB,CACjBkC,KAAM,oBACN3S,KAAM,oFAERmN,KAAM,CAAEwF,KAAM,OAAQ3S,KAAM,wCAC5B4T,SAAU,CACRjB,KAAM,WACN3S,KAAM,yDACN0S,UAAW,SAAC9F,GAAD,OACT,cAAC,GAAD,CACEpG,OAAQoG,EAAKgH,SACbnT,QAAS,kBAAMiT,EAAiB9G,EAAKtL,YAK7C,OACE,cAAC,GAAD,CACEuR,OAAQA,EACRC,aAAcA,EACdP,QAASA,EACTvT,KAAM0L,KCnDGmJ,GCaO,WACpB,IAAMnJ,EAAQM,a/B8HkB,SAACnD,GAAD,OAAWA,EAAM6C,MAAMlD,Y+B7HjDgH,EAAgBxD,a/B4Ic,SAACnD,GAAD,OAAWA,EAAM6C,MAAM1E,KAAKnD,U+B1I1DwI,EAAcL,anC0Bc,SAACnD,GAAD,OAAWA,EAAMwD,YAAY7D,YmCzBzDsM,EAAqB9I,anC0BoB,SAACnD,GAAD,OAC/CA,EAAMwD,YAAY5D,amChCQ,EAMYvH,mBAAS,GANrB,mBAMnB4Q,EANmB,KAMNiD,EANM,OAOY7T,mBAAS,IAPrB,mBAOnB8T,EAPmB,KAONC,EAPM,OAQc/T,qBARd,mBAQnBgU,EARmB,KAQLC,EARK,OASEjU,mBAAS,CAAEyS,KAAM,OAAQM,MAAO,QATlC,mBASnBmB,EATmB,KASXC,EATW,KA2B1BpI,qBAAU,WACR8H,EAAe,KACd,CAACG,EAAcF,IAgClB,IAdqBhV,EAcfsV,GAdetV,EAca0L,GAbVsJ,EAClBhV,EAAK+Q,QACL,SAACnD,GAAD,OAG6C,IAF3CA,EAAK5M,KACFuU,cACArC,QAAQ8B,EAAYO,kBAEzBL,EACElV,EAAK+Q,QAAO,SAACnD,GAAD,OAAUA,EAAKH,aAAeyH,EAAa5S,OACvDtC,GACe+Q,QAAO,SAAC7F,GAAD,OAAOA,EAAE5I,MAAQkN,MAIzCgG,EAAQF,EAAc9U,OAEtBiV,EC7ED,SAAkBlD,EAAOmD,EAAY9D,GAC1C,IAAM+D,GAAcD,EAAa,GAAK9D,EACtC,OAAOO,KAAEI,GAAO7L,MAAMiP,GAAYC,KAAKhE,GAAUnR,QD2E/BoV,CADE1D,KAAE9B,QAAQiF,EAAe,CAACF,EAAOzB,MAAO,CAACyB,EAAOnB,QAC5BnC,EAtDvB,GA2DjB,OACE,sBAAKzQ,UAAU,SAAf,UACGgL,IAAgByI,GACf,sBAAKzT,UAAU,uCAAf,UACE,cAAC,GAAD,CACEsR,aAAcuC,EACd3C,MAAOlG,EACPqG,aA7CqB,SAACE,GACV,KAAhBoC,GAAoBC,EAAe,IACvCE,EAAgBvC,MA6CV,wBACEvR,UAAU,yBACVI,QAfU,WAClB0T,KAYM,uEAQJ,sBAAK9T,UAAU,qBAAf,UACE,cAAC,GAAD,CAAcb,OAAQgV,IACtB,uBACEzU,KAAK,OACLC,KAAK,cACL8U,YAAY,YACZ7U,SAzDkB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OAC3B2T,OAAgBjB,GAChBe,EAAezT,EAAOf,QAwDhBA,MAAOuU,IAERQ,EAAQ,GACP,cAAC,GAAD,CACE9J,MAAO+J,EACP5B,OAvDS,SAACjB,GAClByC,EAAUzC,IAuDFkB,aAAcsB,EACdW,SAxFW,SAAClS,GACpB4D,QAAQC,IAAI,gBAwFJgN,iBArFmB,SAACnT,GAC5B,IAAMyU,EAAWtK,EAAMtJ,KAAI,SAACwL,GAC1B,OAAIA,EAAKtL,MAAQf,EACR,2BAAKqM,GAAZ,IAAkBgH,UAAWhH,EAAKgH,WAE7BhH,KAGTnG,QAAQC,IAAIsO,MAgFR,qBAAK3U,UAAU,gCAAf,SACE,cAAC,GAAD,CACEsQ,WAAY6D,EACZ5D,SAjGO,EAkGPE,YAAaA,EACbD,aArEe,SAACoE,GACxBlB,EAAekB,e,mBEnDbC,GAAc,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SACf8B,EAAanK,ajCqJc,SAACnD,GAAD,OAAWA,EAAM6C,MAAMpB,ciCpJlDjB,EAAW4C,cAIjB,OAHAgB,qBAAU,WACHkJ,GAAY9M,EAASmC,QACzB,IACE2K,EACE9B,EADiB,WAI1B6B,GAAYE,UAAY,CACtB/B,SAAUgC,KAAUC,UAAU,CAC5BD,KAAUE,QAAQF,KAAUG,MAC5BH,KAAUG,QAGCN,UCeAO,GA1BD,WACZ,IAAMzR,EAASqM,cACPxN,EAAiBmB,EAAjBnB,OAAQ6S,EAAS1R,EAAT0R,KACVlH,EAAgBxD,alCgJc,SAACnD,GAAD,OAAWA,EAAM6C,MAAM1E,KAAKnD,UkC9IhE,OACE,mCACE,cAAC,GAAD,UACGA,EACC6S,EACE7S,IAAW2L,EACT,cAAC,GAAD,IAEA,cAAC,IAAD,CAAUmF,GAAE,iBAAYnF,EAAZ,WAGd,cAAC,GAAD,CAAU3L,OAAQA,IAGpB,cAAC,GAAD,SCSK8S,GAnCO,SAAC,GAAgD,IAA9C3V,EAA6C,EAA7CA,KAAMP,EAAuC,EAAvCA,MAAOQ,EAAgC,EAAhCA,SAAUoT,EAAsB,EAAtBA,SAAUzT,EAAY,EAAZA,MAOxD,OACE,sBAAKS,UAAU,kBAAf,UACE,uBACEA,UALG,oBAAsBT,EAAQ,cAAgB,IAMjDG,KAAK,WACLN,MAAM,GACNc,GAAIP,EACJC,SAbe,WACnBA,EAAS,CAAED,KAAMA,EAAMP,OAAQA,KAa3BkC,QAASlC,IAEX,uBAAOY,UAAU,oBAAoBC,QAASN,EAA9C,SACGqT,IAEFzT,GAAS,qBAAKS,UAAU,mBAAf,SAAmCT,QCwEpCgW,GAvFG,WAAO,IAAD,EACE1V,mBAAS,CAC/BwE,MAAO,GACPC,SAAU,GACVkR,QAAQ,IAJY,mBACf7W,EADe,KACT8L,EADS,KAMhBgL,EAAa9K,apCgJc,SAACnD,GAAD,OAAWA,EAAM6C,MAAM9K,SoC/IlDsC,EAAUC,cACV4T,EAAU9K,cARM,EASM/K,mBAAS,IATf,mBASfhB,EATe,KASPuM,EATO,KAWhB/J,EAAe,SAAClB,GACpBsK,GAAQ,SAACpK,GAAD,mBAAC,eACJA,GADG,kBAELF,EAAOR,KAAOQ,EAAOf,YAIpByM,EAAkB,CACtBxH,MAAO,CACLyH,WAAY,CACVzM,QAAS,yPAGbiF,SAAU,CACRwH,WAAY,CACVzM,QAAS,uLAIfuM,qBAAU,WACR9M,MACC,CAACH,IACJ,IAAMG,EAAW,WACf,IAAMD,EAASH,EAAUC,EAAMkN,GAE/B,OADAT,EAAUvM,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,QAEvB6M,EAAyC,IAA/BnL,OAAOC,KAAKjC,GAAQM,OAYpC,OACE,uBAAM8M,SAXa,SAACC,GAGpB,GAFAA,EAAEC,iBACcrN,IAChB,CACA,IAAM6W,EAAW9T,EAAQ2K,SAAShF,MAC9B3F,EAAQ2K,SAAShF,MAAMoO,KAAKnJ,SAC5B,IAEJiJ,EpC4BF,SAAC,GAAD,IAAGzR,EAAH,EAAGA,QAAS0R,EAAZ,EAAYA,SAAZ,8CACE,WAAO3N,GAAP,2BAAA9D,EAAA,6DACUG,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SACf0D,EAAS8B,MAFX,kBAIuB/F,EAAYK,MAAM,CAAEC,QAAOC,aAJlD,OAIU3F,EAJV,OAKIyD,EAAoBC,UAAU1D,GAC9BqJ,EAASsB,GAAmB,CAAE9G,OAAQ7D,EAAK6D,UAC3CX,GAAQ4H,KAAKkM,GAPjB,oDAS8B,KAAM3P,SAASrH,KAAKY,MAAtCsW,EATZ,EASYA,KAAMxW,EATlB,EASkBA,QACD,MAATwW,GACIC,EAAehN,GAAkBzJ,GACvC2I,EAASuB,GAAkBuM,KAE3B9N,EAASuB,GAAkB,KAAMlK,UAdvC,0DADF,sDoC5BU+E,CAAM,CAAEH,QAAStF,EAAMgX,gBAG/B,UACE,cAAC,EAAD,CACElW,MAAM,oGACNE,KAAK,QACLP,MAAOT,EAAK0F,MACZzE,SAAUyB,EACV9B,MAAOV,EAAOwF,QAEhB,cAAC,EAAD,CACE5E,MAAM,uCACNC,KAAK,WACLC,KAAK,WACLP,MAAOT,EAAK2F,SACZ1E,SAAUyB,EACV9B,MAAOV,EAAOyF,WAEhB,cAAC,GAAD,CACElF,MAAOT,EAAK6W,OACZ5V,SAAUyB,EACV1B,KAAK,SAHP,4HAOC8V,GAAc,mBAAGzV,UAAU,cAAb,SAA4ByV,IAE3C,wBACE/V,KAAK,SACLwB,UAAW8K,EACXhM,UAAU,gCAHZ,wBC8FS+V,GAtKM,WACnB,IAAM/N,EAAW4C,cADQ,EAED/K,mBAAS,CAC/BwE,MAAO,GACPC,SAAU,GACV8H,WAAY,GACZC,IAAK,OACL1M,KAAM,GACNuI,UAAW,GACX8N,SAAS,IATc,mBAElBrX,EAFkB,KAEZ8L,EAFY,KAanBK,EADYH,a3CoBc,SAACnD,GAAD,OAAWA,EAAMU,UAAUf,Y2CnB3BpG,KAAI,SAACgK,GAAD,MAAQ,CAC1CtL,MAAOsL,EAAEpL,KACTP,MAAO2L,EAAE9J,QAILiK,EAFcP,azCgBc,SAACnD,GAAD,OAAWA,EAAMwD,YAAY7D,YyCd3BpG,KAAI,SAACoK,GAAD,MAAQ,CAC9C1L,MAAO0L,EAAExL,KACTP,MAAO+L,EAAElK,QArBc,EAuBGpB,mBAAS,IAvBZ,mBAuBlBhB,EAvBkB,KAuBVuM,EAvBU,KAyBnB/J,EAAe,SAAClB,GACpBsK,GAAQ,SAACpK,GAAD,mBAAC,eACJA,GADG,kBAELF,EAAOR,KAAOQ,EAAOf,YAGpByM,EAAkB,CACtBxH,MAAO,CACLyH,WAAY,CACVzM,QAAS,wPAEX0M,QAAS,CACP1M,QAAS,kHAGbM,KAAM,CACJmM,WAAY,CACVzM,QAAS,yKAEX4W,IAAK,CACH5W,QAAS,sNACTD,MAAO,IAGXkF,SAAU,CACRwH,WAAY,CACVzM,QAAS,2LAEX6W,gBAAiB,CACf7W,QAAS,yRAEX8W,eAAgB,CACd9W,QAAS,kOAEX4W,IAAK,CACH5W,QAAS,kOACTD,MAAO,IAGXgN,WAAY,CACVN,WAAY,CACVzM,QAAS,wMAGb2W,QAAS,CACPlK,WAAY,CACVzM,QACE,ybAIRuM,qBAAU,WACR9M,MACC,CAACH,IACJ,IAAMG,EAAW,WACf,IAAMD,EAASH,EAAUC,EAAMkN,GAE/B,OADAT,EAAUvM,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,QAEvB6M,EAAyC,IAA/BnL,OAAOC,KAAKjC,GAAQM,OAapC,OACE,uBAAM8M,SAZa,SAACC,GAGpB,GAFAA,EAAEC,iBACcrN,IAChB,CACA,IrCEmBmF,EqCFbmS,EAAO,2BACRzX,GADQ,IAEXuJ,UAAWvJ,EAAKuJ,UAAUnH,KAAI,SAACgK,GAAD,OAAOA,EAAE3L,WAEzC4I,GrCFmB/D,EqCEHmS,ErCFE,uCAClB,WAAOpO,GAAP,eAAA9D,EAAA,6DACE8D,EAAS8B,MADX,kBAGuB/F,EAAYC,SAASC,GAH5C,OAGUtF,EAHV,OAIIyD,EAAoBC,UAAU1D,GAC9BqJ,EAASsB,GAAmB,CAAE9G,OAAQ7D,EAAK6D,UAC3CX,GAAQ4H,KAAK,UANjB,kDAQIzB,EAASuB,GAAkB,KAAMlK,UARrC,0DADkB,0DqCMlB,UACE,cAAC,EAAD,CACEI,MAAM,oGACNE,KAAK,QACLP,MAAOT,EAAK0F,MACZzE,SAAUyB,EACV9B,MAAOV,EAAOwF,QAEhB,cAAC,EAAD,CACE5E,MAAM,qBACNE,KAAK,OACLP,MAAOT,EAAKgB,KACZC,SAAUyB,EACV9B,MAAOV,EAAOc,OAEhB,cAAC,EAAD,CACEF,MAAM,uCACNC,KAAK,WACLC,KAAK,WACLP,MAAOT,EAAK2F,SACZ1E,SAAUyB,EACV9B,MAAOV,EAAOyF,WAEhB,cAAC,EAAD,CACE7E,MAAM,uHACNe,cAAc,YACdb,KAAK,aACLc,QAASyK,EACTtL,SAAUyB,EACVjC,MAAOT,EAAKyN,WACZ7M,MAAOV,EAAOuN,aAEhB,cAAC,EAAD,CACE3L,QAAS,CACP,CAAEd,KAAM,OAAQP,MAAO,QACvB,CAAEO,KAAM,SAAUP,MAAO,UACzB,CAAEO,KAAM,QAASP,MAAO,UAE1BA,MAAOT,EAAK0N,IACZ1M,KAAK,MACLC,SAAUyB,EACV5B,MAAM,2FAER,cAAC,EAAD,CACEgB,QAASqK,EACTlL,SAAUyB,EACV1B,KAAK,YACLF,MAAM,+HAER,eAAC,GAAD,CACEL,MAAOT,EAAKqX,QACZpW,SAAUyB,EACV1B,KAAK,UACLJ,MAAOV,EAAOmX,QAJhB,gFAMc,yKAEd,wBACEtW,KAAK,SACLwB,UAAW8K,EACXhM,UAAU,gCAHZ,wBCrHSqW,GA7CD,WAAO,IACX3W,EAASsQ,cAATtQ,KADU,EAEcG,mBACrB,aAATH,EAAsBA,EAAO,SAHb,mBAEX4W,EAFW,KAEDC,EAFC,KAKZC,EAAiB,SAAC7S,GACtB4S,GAAY,SAAClW,GAAD,MACI,aAAdA,EAA2B,QAAU,eAIzC,OACE,qBAAKL,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,kCAAf,SACgB,aAAbsW,EACC,qCACE,oBAAItW,UAAU,OAAd,sBACA,cAAC,GAAD,IACA,sDACwB,IACtB,oBAAG6M,KAAK,SAASzM,QAASoW,EAA1B,UACG,IADH,mBAOJ,qCACE,oBAAIxW,UAAU,OAAd,mBACA,cAAC,GAAD,IACA,mDACqB,IACnB,oBAAG6M,KAAK,SAASzM,QAASoW,EAA1B,UACG,IADH,0B,2BCuBDC,GAvDK,WAClB,IAAMC,EACE,cADFA,EAEK,aAFLA,EAGO,QAHPA,EAIG,gBALe,EAOE7W,mBAAS,MAPX,mBAOjBN,EAPiB,KAOVoX,EAPU,OAQI9W,mBAAS6W,GARb,mBAQjBvQ,EARiB,KAQTyQ,EARS,OASQ/W,mBAAS,GATjB,mBASjBgX,EATiB,KASPC,EATO,OAUEjX,mBAAS,GAVX,mBAUjBsU,EAViB,KAUV4C,EAVU,KAWlBC,EAAehM,GAAY7L,OAAS+I,GAAU/I,OAASkL,GAAMlL,OAC7D8X,EAAiB,WACrBF,GAAS,SAAC1W,GAAD,OAAeA,EAAY,MAbd,4CAgCxB,4CAAA6D,EAAA,6EAEuB8G,IAFvB,gEAEekI,EAFf,iBAGY3M,EAAYE,IAAI,cAAgByM,EAAKjS,IAAKiS,GAHtD,OAIM+D,IAJN,4JAMuB5M,IANvB,kEAMekC,EANf,kBAOYhG,EAAYE,IAAI,QAAU8F,EAAKtL,IAAKsL,GAPhD,QAQM0K,IARN,+JAUuB/O,IAVvB,kEAUeyD,EAVf,kBAWYpF,EAAYE,IAAI,WAAakF,EAAK1K,IAAK0K,GAXnD,QAYMsL,IAZN,mMAeIN,EAAS,EAAD,IACRC,EAAUF,GAhBd,oGAhCwB,sBAoDxB,OAxBA9K,qBAAU,YAba,WACP,IAAVuI,GAAehO,IAAWuQ,GAC5BE,EAAUF,GAEZ,IAAMQ,EAAcvG,KAAKwG,MAAOhD,EAAQ6C,EAAgB,KACpDH,EAAWK,GACbJ,GAAY,kBAAMI,KAEA,MAAhBA,GACFN,EAAUF,GAKZU,KACC,CAACjD,IAsBG,CAAE5U,QAAO8X,WApDQ,2CAoDIR,WAAU1Q,WCjCzBmR,GAtBF,WAAO,IAAD,EAC+Bb,KAAxClX,EADS,EACTA,MAAO8X,EADE,EACFA,WAAYR,EADV,EACUA,SAAU1Q,EADpB,EACoBA,OAIrC,OACE,sBAAKnG,UAAU,iBAAf,UACE,4CACA,qKACA,+BACE,yCAAYmG,KACZ,4CAAe0Q,EAAf,OACCtX,GAAS,yCAAYA,QAExB,yBAAQS,UAAU,kBAAkBI,QAZpB,WAClBiX,KAWE,UACG,IADH,0GCsBSE,GAlCI,WACjB,IAAM7M,EAAcC,azCyIkB,SAACnD,GACvC,OAAOA,EAAM6C,MAAMlD,SACfK,EAAM6C,MAAMlD,SAASmD,MAAK,SAACT,GAAD,OAAOA,EAAE5I,MAAQuG,EAAM6C,MAAM1E,KAAKnD,UAC5D,QyC7ImB,EAEG3C,oBAAS,GAFZ,mBAEhB2X,EAFgB,KAERC,EAFQ,KAOvB,OAAK/M,EAEH,sBAAK1K,UAAU,WAAWI,QANT,WACjBqX,GAAQ,SAACpX,GAAD,OAAgBA,MAKxB,UACE,sBAAKL,UAAU,gDAAf,UACE,qBAAKA,UAAU,OAAf,SAAuB0K,EAAY/K,OACnC,qBACE+M,IAAKhC,EAAYiC,MACjByB,IAAI,GACJC,OAAO,KACPrO,UAAU,qCAGd,sBAAKA,UAAW,uBAAyBwX,EAAS,QAAU,IAA5D,UACE,cAAC,KAAD,CACElE,GAAE,iBAAY5I,EAAYzJ,KAC1BjB,UAAU,gBAFZ,qBAMA,cAAC,KAAD,CAAMsT,GAAG,UAAUtT,UAAU,gBAA7B,2BAnBmB,WCoCZ0X,GAzCA,WACb,IAAM1O,EAAa2B,a1CkJc,SAACnD,GAAD,OAAWA,EAAM6C,MAAMrB,c0CjJxD,OACE,qBAAKhJ,UAAU,uBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAIA,UAAU,MAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,KAAD,CAAMA,UAAU,YAAY2X,eAAa,OAAOrE,GAAG,IAAnD,oBAIDtK,GACC,oBAAIhJ,UAAU,WAAd,SACE,cAAC,KAAD,CACEA,UAAU,YACV2X,eAAa,OACbrE,GAAG,SAHL,wBAUN,qBAAKtT,UAAU,SAAf,SACGgJ,EACC,cAAC,GAAD,IAEA,cAAC,KAAD,CACEhJ,UAAU,YACV2X,eAAa,OACbrE,GAAG,SAHL,2BCKGsE,GAjCQ,SAAC,GAAiD,IAApCC,EAAmC,EAA9CxF,UAAsBW,EAAwB,EAAxBA,SAAahB,EAAW,yCAChEhJ,EAAa2B,a3CmJc,SAACnD,GAAD,OAAWA,EAAM6C,MAAMrB,c2CjJxD,OACE,cAAC,IAAD,2BACMgJ,GADN,IAEE8F,OAAQ,SAACC,GACP,OAAK/O,EAYE6O,EAAY,cAACA,EAAD,eAAeE,IAAY/E,EAV1C,cAAC,IAAD,CACEM,GAAI,CACF7G,SAAU,SACVjF,MAAO,CACLoO,KAAMmC,EAAMvL,kBCNfwL,GATA,WACb,IAAMhQ,EAAW4C,cAKjB,OAJAgB,qBAAU,WACRxF,QAAQC,IAAI,UACZ2B,G5C4GwB,SAACA,GAC3B5F,EAAoBgB,iBACpB4E,EAAS0B,MACT7H,GAAQ4H,KAAK,U4C9GV,IACI,0CCCHwO,GAAY,SAAC,GAAkB,IAAhBjF,EAAe,EAAfA,SACbhL,EAAW4C,cACX5B,EAAa2B,a7C6Ic,SAACnD,GAAD,OAAWA,EAAM6C,MAAMrB,c6C5IlDkP,EAAqBvN,a7C8Ic,SAACnD,GAAD,OAAWA,EAAM6C,MAAMjD,a6CtIhE,OAPAwE,qBAAU,WACR5D,EAASD,KACTC,EjDe+B,uCAAM,WAAOA,EAAUC,GAAjB,mBAAA/D,EAAA,yDAC/BmD,EAAcY,IAAW+C,YAAzB3D,WACJP,EAAWO,GAFwB,wBAGrCjB,QAAQC,IAAI,YAAagB,GACzBW,EAASM,MAJ4B,kBAMTH,EAAkB3B,MANT,gBAM3BN,EAN2B,EAM3BA,QACR8B,EAASO,GAAmBrC,IAPO,kDASnC8B,EAASQ,GAAwB,KAAMnJ,UATJ,0DAAN,yDiDd3B2J,GACFhB,EAASmC,QAEV,CAACnB,IACAkP,EAA2B,UACxBlF,GAGTiF,GAAUlD,UAAY,CACpB/B,SAAUgC,KAAUC,UAAU,CAC5BD,KAAUE,QAAQF,KAAUG,MAC5BH,KAAUG,QAGC8C,UCEAE,OArBf,WACE,OACE,gCACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,GAAD,CACE7F,KAAK,yBACLD,UAAW+C,KAEb,cAAC,IAAD,CAAO9C,KAAK,gBAAgBD,UAAWgE,KACvC,cAAC,IAAD,CAAO/D,KAAK,UAAUD,UAAW2F,KACjC,cAAC,IAAD,CAAO1F,KAAK,IAAI8F,OAAK,EAAC/F,UAAWiF,KACjC,cAAC,IAAD,CAAUhE,GAAG,YAGjB,cAAC,IAAD,Q,GCxBsC+E,EAAQ,IAA5CC,G,GAAAA,gBAAiBC,G,GAAAA,eAEnBC,GAAcF,GAAgB,CAClCpQ,UAAWN,EACXoD,YAAavC,GACb4B,MAAON,GACPwE,SAAUqB,KCAZ,IAAM6I,GDIGF,GAAe,CACpB1Q,QAAS2Q,KCHbE,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,IAAD,CAAUF,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAQ5W,QAASA,GAAjB,SACE,cAAC,GAAD,UAIN+W,SAASC,eAAe,SAM1B5a,K","file":"static/js/main.c5d600d0.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n  const errors = {};\n\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\": {\n        if (typeof data === \"boolean\") {\n          statusValidate = !data;\n        } else {\n          statusValidate = data.trim() === \"\";\n        }\n        break;\n      }\n      case \"isEmail\": {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n        statusValidate = !emailRegExp.test(data);\n        break;\n      }\n      case \"isCapitalSymbol\": {\n        const capitalRegExp = /[A-Z]+/g;\n        statusValidate = !capitalRegExp.test(data);\n        break;\n      }\n      case \"isContainDigit\": {\n        const digitRegExp = /\\d+/g;\n        statusValidate = !digitRegExp.test(data);\n        break;\n      }\n      case \"min\": {\n        statusValidate = data.length < config.value;\n        break;\n      }\n      default:\n        break;\n    }\n    if (statusValidate) return config.message;\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      );\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor={name}> {label}</label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? \"text\" : type}\n          id={name}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n\n        {type === \"password\" && (\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i\n              className={\n                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n              }\n            ></i>\n          </button>\n        )}\n        {error && <div className=\"invalid-feedback \">{error}</div>}\n      </div>\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\"\n};\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n  label,\n  value,\n  onChange,\n  defaultOption,\n  options,\n  error,\n  name\n}) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n  const getInputClasses = () => {\n    return \"form-select\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const optionsArray =\n    !Array.isArray(options) && typeof options === \"object\"\n      ? Object.keys(options).map((optionName) => ({\n        name: options[optionName].name,\n        value: options[optionName]._id\n      }))\n      : options;\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\n        {label}\n      </label>\n      <select\n        className={getInputClasses()}\n        id=\"validationCustom04\"\n        name={name}\n        value={value}\n        onChange={handleChange}\n      >\n        <option disabled value=\"\">\n          {defaultOption}\n        </option>\n        {optionsArray &&\n          optionsArray.map((option) => (\n            <option value={option.value} key={option.value}>\n              {option.label}\n            </option>\n          ))}\n      </select>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nSelectField.propTypes = {\n  defaultOption: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <div>\n        {options.map((option) => (\n          <div\n            key={option.name + \"_\" + option.value}\n            className=\"form-check form-check-inline\"\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name={name}\n              id={option.name + \"_\" + option.value}\n              checked={option.value === value}\n              value={option.value}\n              onChange={handleChange}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor={option.name + \"_\" + option.value}\n            >\n              {option.name}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nRadioField.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === \"object\"\n      ? Object.keys(options).map((optionName) => ({\n        label: options[optionName].name,\n        value: options[optionName]._id\n      }))\n      : options;\n\n  const handleChange = (value) => {\n    onChange({ name: name, value });\n  };\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <Select\n        isMulti\n        closeMenuOnSelect={false}\n        defaultValue={defaultValue}\n        options={optionsArray}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={handleChange}\n        name={name}\n      />\n    </div>\n  );\n};\nMultiSelectField.propTypes = {\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst BackHistoryButton = () => {\n  const history = useHistory();\n  return (\n    <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n      <i className=\"bi bi-caret-left\"></i>\n      Назад\n    </button>\n  );\n};\n\nexport default BackHistoryButton;\n","const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n  refreshToken,\n  accessToken,\n  userId,\n  expiresIn = 3600\n}) {\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(USERID_KEY, userId);\n  localStorage.setItem(TOKEN_KEY, accessToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\n\nexport function getAccessToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\n\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY);\n}\n\nexport function removeAuthData() {\n  localStorage.removeItem(USERID_KEY);\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(REFRESH_KEY);\n  localStorage.removeItem(EXPIRES_KEY);\n}\n\nexport function getTokenExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\n\nexport function getUserId() {\n  return localStorage.getItem(USERID_KEY);\n}\n\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getRefreshToken,\n  getTokenExpiresDate,\n  getUserId,\n  removeAuthData\n};\nexport default localStorageService;\n","import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\";\n\nconst httpAuth = axios.create({\n  baseURL: config.apiEndpoint + \"/auth/\",\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY\n  }\n});\n\nconst authService = {\n  register: async (payload) => {\n    const { data } = await httpAuth.post(`signUp`, payload);\n    return data;\n  },\n  login: async ({ email, password }) => {\n    const { data } = await httpAuth.post(`signInWithPassword`, {\n      email,\n      password,\n      returnSecureToken: true\n    });\n    return data;\n  },\n  refresh: async () => {\n    const { data } = await httpAuth.post(\"token\", {\n      grant_type: \"refresh_token\",\n      refresh_token: localStorageService.getRefreshToken()\n    });\n    return data;\n  }\n};\nexport default authService;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport authService from \"./auth.service\";\n\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n  baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n  async function (config) {\n    const expiresDate = localStorageService.getTokenExpiresDate();\n    const refreshToken = localStorageService.getRefreshToken();\n    const isExpired = refreshToken && expiresDate < Date.now();\n\n    if (configFile.isFireBase) {\n      const containSlash = /\\/$/gi.test(config.url);\n      config.url =\n        (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n\n      if (isExpired) {\n        const data = await authService.refresh();\n\n        localStorageService.setTokens({\n          refreshToken: data.refresh_token,\n          idToken: data.id_token,\n          expiresIn: data.expires_in,\n          localId: data.user_id\n        });\n      }\n      const accessToken = localStorageService.getAccessToken();\n      if (accessToken) {\n        config.params = { ...config.params, auth: accessToken };\n      }\n    } else {\n      if (isExpired) {\n        const data = await authService.refresh();\n\n        localStorageService.setTokens(data);\n      }\n      const accessToken = localStorageService.getAccessToken();\n      if (accessToken) {\n        config.headers = {\n          ...config.headers,\n          Authorization: `Bearer ${accessToken}`\n        };\n      }\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nfunction transormData(data) {\n  return data && !data._id\n    ? Object.keys(data).map((key) => ({\n      ...data[key]\n    }))\n    : data;\n}\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (configFile.isFireBase) {\n      res.data = { content: transormData(res.data) };\n    }\n    res.data = { content: res.data };\n    return res;\n  },\n  function (error) {\n    const expectedErrors =\n      error.response &&\n      error.response.status >= 400 &&\n      error.response.status < 500;\n\n    if (!expectedErrors) {\n      console.log(error);\n      toast.error(\"Somthing was wrong. Try it later\");\n    }\n    return Promise.reject(error);\n  }\n);\nconst httpService = {\n  get: http.get,\n  post: http.post,\n  put: http.put,\n  delete: http.delete,\n  patch: http.patch\n};\nexport default httpService;\n","import httpService from \"./http.service\";\n\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n  fetchAll: async () => {\n    const { data } = await httpService.get(qualityEndpoint);\n    return data;\n  }\n};\nexport default qualityService;\n","function isOutdated(date) {\n  if (Date.now() - date > 10 * 60 * 100) {\n    return true;\n  }\n  return false;\n}\n\nexport default isOutdated;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/qaulity.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\nconst qualitiesSlice = createSlice({\n  name: \"qualities\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    qualitiesRequested: (state) => {\n      state.isLoading = true;\n    },\n    qualitiesReceved: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    qualitiesRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\n\nconst { reducer: qualitiesReducer, actions } = qualitiesSlice;\nconst { qualitiesRequested, qualitiesReceved, qualitiesRequestFiled } = actions;\n\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n  const { lastFetch } = getState().qualities;\n  if (isOutdated(lastFetch)) {\n    dispatch(qualitiesRequested());\n    try {\n      const { content } = await qualityService.fetchAll();\n      dispatch(qualitiesReceved(content));\n    } catch (error) {\n      dispatch(qualitiesRequestFiled(error.message));\n    }\n  }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\nexport const getQualitiesLoadingStatus = () => (state) =>\n  state.qualities.isLoading;\nexport const getQulitiesByIds = (qualitiesIds) => (state) => {\n  if (state.qualities.entities) {\n    const qualitiesArray = [];\n    for (const qualId of qualitiesIds) {\n      for (const quality of state.qualities.entities) {\n        if (quality._id === qualId) {\n          qualitiesArray.push(quality);\n          break;\n        }\n      }\n    }\n    return qualitiesArray;\n  }\n  return [];\n};\n\nexport default qualitiesReducer;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n  get: async () => {\n    const req = await httpService.get(professionEndpoint);\n    return req.data;\n  }\n};\nexport default professionService;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport professionService from \"../services/profession.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\nconst professionsSlice = createSlice({\n  name: \"professions\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    professionsRequested: (state) => {\n      state.isLoading = true;\n    },\n    professionsReceved: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    professionsRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\n\nconst { reducer: professionsReducer, actions } = professionsSlice;\nconst { professionsRequested, professionsReceved, professionsRequestFiled } =\n  actions;\n\nexport const loadProfessionsList = () => async (dispatch, getState) => {\n  const { lastFetch } = getState().professions;\n  if (isOutdated(lastFetch)) {\n    console.log(\"lastFetch\", lastFetch);\n    dispatch(professionsRequested());\n    try {\n      const { content } = await professionService.get();\n      dispatch(professionsReceved(content));\n    } catch (error) {\n      dispatch(professionsRequestFiled(error.message));\n    }\n  }\n};\nexport const getProfessions = () => (state) => state.professions.entities;\nexport const getProfessionsLoadingStatus = () => (state) =>\n  state.professions.isLoading;\nexport const getProfessionbyId = (id) => (state) => {\n  if (state.professions.entities) {\n    return state.professions.entities.find((p) => p._id === id);\n  }\n};\nexport default professionsReducer;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n  get: async () => {\n    const { data } = await httpService.get(userEndpoint);\n    return data;\n  },\n  create: async (payload) => {\n    const { data } = await httpService.put(\n      userEndpoint + payload._id,\n      payload\n    );\n    return data;\n  },\n  getCurrentUser: async () => {\n    const { data } = await httpService.get(\n      userEndpoint + localStorageService.getUserId()\n    );\n    return data;\n  },\n  update: async (payload) => {\n    const { data } = await httpService.patch(\n      userEndpoint + localStorageService.getUserId(),\n      payload\n    );\n    return data;\n  }\n};\nexport default userService;\n","export function generetaAuthError(message) {\n  switch (message) {\n    case \"INVALID_PASSWORD\":\n      return \"Email или пароль введены некорректно\";\n    case \"EMAIL_EXISTS\":\n      return \"Пользователь с таким Email уже существует\";\n    default:\n      return \"Слишком много попыток входа. Попробуйте позднее\";\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { generetaAuthError } from \"../utils/generateAuthError\";\nimport history from \"../utils/history\";\n\nconst initialState = localStorageService.getAccessToken()\n  ? {\n    entities: null,\n    isLoading: true,\n    error: null,\n    auth: { userId: localStorageService.getUserId() },\n    isLoggedIn: true,\n    dataLoaded: false\n  }\n  : {\n    entities: null,\n    isLoading: false,\n    error: null,\n    auth: null,\n    isLoggedIn: false,\n    dataLoaded: false\n  };\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    usersRequested: (state) => {\n      state.isLoading = true;\n    },\n    usersReceved: (state, action) => {\n      state.entities = action.payload;\n      state.dataLoaded = true;\n      state.isLoading = false;\n    },\n    usersRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    authRequestSuccess: (state, action) => {\n      state.auth = action.payload;\n      state.isLoggedIn = true;\n    },\n    authRequestFailed: (state, action) => {\n      state.error = action.payload;\n    },\n    userCreated: (state, action) => {\n      state.entities.push(action.payload);\n    },\n    userLoggedOut: (state) => {\n      state.entities = null;\n      state.isLoggedIn = false;\n      state.auth = null;\n      state.dataLoaded = false;\n    },\n    userUpdateSuccessed: (state, action) => {\n      state.entities[\n        state.entities.findIndex((u) => u._id === action.payload._id)\n        ] = action.payload;\n    },\n    authRequested: (state) => {\n      state.error = null;\n    }\n  }\n});\n\nconst { reducer: usersReducer, actions } = usersSlice;\nconst {\n  usersRequested,\n  usersReceved,\n  usersRequestFiled,\n  authRequestFailed,\n  authRequestSuccess,\n  userLoggedOut,\n  userUpdateSuccessed\n} = actions;\n\nconst authRequested = createAction(\"users/authRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\n\nexport const login =\n  ({ payload, redirect }) =>\n    async (dispatch) => {\n      const { email, password } = payload;\n      dispatch(authRequested());\n      try {\n        const data = await authService.login({ email, password });\n        localStorageService.setTokens(data);\n        dispatch(authRequestSuccess({ userId: data.userId }));\n        history.push(redirect);\n      } catch (error) {\n        const { code, message } = error.response.data.error;\n        if (code === 400) {\n          const errorMessage = generetaAuthError(message);\n          dispatch(authRequestFailed(errorMessage));\n        } else {\n          dispatch(authRequestFailed(error.message));\n        }\n      }\n    };\n\nexport const signUp = (payload) =>\n    async (dispatch) => {\n      dispatch(authRequested());\n      try {\n        const data = await authService.register(payload);\n        localStorageService.setTokens(data);\n        dispatch(authRequestSuccess({ userId: data.userId }));\n        history.push(\"/users\");\n      } catch (error) {\n        dispatch(authRequestFailed(error.message));\n      }\n    };\nexport const logOut = () => (dispatch) => {\n  localStorageService.removeAuthData();\n  dispatch(userLoggedOut());\n  history.push(\"/\");\n};\n\nexport const loadUsersList = () => async (dispatch) => {\n  dispatch(usersRequested());\n  try {\n    const { content } = await userService.get();\n    dispatch(usersReceved(content));\n  } catch (error) {\n    dispatch(usersRequestFiled(error.message));\n  }\n};\nexport const updateUser = (payload) => async (dispatch) => {\n  dispatch(userUpdateRequested());\n  try {\n    const { content } = await userService.update(payload);\n    dispatch(userUpdateSuccessed(content));\n    history.push(`/users/${content._id}`);\n  } catch (error) {\n    dispatch(userUpdateFailed(error.message));\n  }\n};\n\nexport const getUsersList = () => (state) => state.users.entities;\nexport const getCurrentUserData = () => (state) => {\n  return state.users.entities\n    ? state.users.entities.find((u) => u._id === state.users.auth.userId)\n    : null;\n};\nexport const getUserById = (userId) => (state) => {\n  if (state.users.entities) {\n    return state.users.entities.find((u) => u._id === userId);\n  }\n};\n\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\nexport const getAuthErrors = () => (state) => state.users.error;\nexport default usersReducer;\n","import EditUserPage from \"./editUserPage\";\n\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getQualities,\n  getQualitiesLoadingStatus\n} from \"../../../store/qualities\";\nimport {\n  getProfessions,\n  getProfessionsLoadingStatus\n} from \"../../../store/professions\";\nimport { getCurrentUserData, updateUser } from \"../../../store/users\";\n\nconst EditUserPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const currentUser = useSelector(getCurrentUserData());\n  const dispatch = useDispatch();\n  const qualities = useSelector(getQualities());\n  const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\n  const qualitiesList = qualities.map((q) => ({\n    label: q.name,\n    value: q._id\n  }));\n  const professions = useSelector(getProfessions());\n  const professionLoading = useSelector(getProfessionsLoadingStatus());\n  const professionsList = professions.map((p) => ({\n    label: p.name,\n    value: p._id\n  }));\n\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    dispatch(\n      updateUser({\n        ...data,\n        qualities: data.qualities.map((q) => q.value)\n      })\n    );\n  };\n\n  function getQualitiesListByIds(qualitiesIds) {\n    const qualitiesArray = [];\n    for (const qualId of qualitiesIds) {\n      for (const quality of qualities) {\n        if (quality._id === qualId) {\n          qualitiesArray.push(quality);\n          break;\n        }\n      }\n    }\n    return qualitiesArray;\n  }\n\n  const transformData = (data) => {\n    const result = getQualitiesListByIds(data).map((qual) => ({\n      label: qual.name,\n      value: qual._id\n    }));\n\n    return result;\n  };\n  useEffect(() => {\n    if (!professionLoading && !qualitiesLoading && currentUser && !data) {\n      setData({\n        ...currentUser,\n        qualities: transformData(currentUser.qualities)\n      });\n    }\n  }, [professionLoading, qualitiesLoading, currentUser, data]);\n  useEffect(() => {\n    if (data && isLoading) {\n      setIsLoading(false);\n    }\n  }, [data]);\n\n  const validatorConfog = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => validate(), [data]);\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  return (\n    <div className=\"container mt-5\">\n      <BackHistoryButton/>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {!isLoading && Object.keys(professions).length > 0 ? (\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n              />\n              <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n              />\n              <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                name=\"profession\"\n                options={professionsList}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n              />\n              <RadioField\n                options={[\n                  { name: \"Male\", value: \"male\" },\n                  { name: \"Female\", value: \"female\" },\n                  { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n              />\n              <MultiSelectField\n                defaultValue={data.qualities}\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качесвта\"\n              />\n              <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n              >\n                Обновить\n              </button>\n            </form>\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserData } from \"../../store/users\";\n\nconst UserCard = ({ user }) => {\n  const history = useHistory();\n\n  const currentUser = useSelector(getCurrentUserData());\n  const handleClick = () => {\n    history.push(history.location.pathname + \"/edit\");\n  };\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        {currentUser._id === user._id && (\n          <button\n            className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n            onClick={handleClick}\n          >\n            <i className=\"bi bi-gear\"></i>\n          </button>\n        )}\n\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n          <img\n            src={user.image}\n            className=\"rounded-circle\"\n            width=\"150\"\n          />\n          <div className=\"mt-3\">\n            <h4>{user.name}</h4>\n            <p className=\"text-secondary mb-1\">\n              {user.profession.name}\n            </p>\n            <div className=\"text-muted\">\n              <i\n                className=\"bi bi-caret-down-fill text-primary\"\n                role=\"button\"\n              ></i>\n              <i\n                className=\"bi bi-caret-up text-secondary\"\n                role=\"button\"\n              ></i>\n              <span className=\"ms-2\">{user.rate}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nUserCard.propTypes = {\n  user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Quality = ({ _id, color, name }) => {\n  return (\n    <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n  );\n  // return \"something\";\n};\nQuality.propTypes = {\n  _id: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\n\nexport default Qualities;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport {\n  getQualitiesLoadingStatus,\n  getQulitiesByIds,\n  loadQualitiesList\n} from \"../../../store/qualities\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst QualitiesList = ({ qualities }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getQualitiesLoadingStatus());\n  const qualitiesList = useSelector(getQulitiesByIds(qualities));\n  useEffect(() => {\n    dispatch(loadQualitiesList());\n  }, []);\n\n  if (isLoading) return \"Loadind ...\";\n\n  return (\n    <>\n      {qualitiesList.map((qual) => (\n        <Quality key={qual._id} {...qual} />\n      ))}\n    </>\n  );\n};\n\nQualitiesList.propTypes = {\n  qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Qualities</span>\n        </h5>\n        <p className=\"card-text\">\n          <Qualities qualities={data}/>\n        </p>\n      </div>\n    </div>\n  );\n};\nQualitiesCard.propTypes = {\n  data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MeetingsCard = ({ value }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Completed meetings</span>\n        </h5>\n\n        <h1 className=\"display-1\">{value}</h1>\n      </div>\n    </div>\n  );\n};\nMeetingsCard.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n  const date = new Date(data);\n  const dateNow = new Date();\n  const yearDif = dateNow.getFullYear() - date.getFullYear();\n  if (yearDif === 0) {\n    const dayDif = dateNow.getDay() - date.getDay();\n    if (dayDif === 0) {\n      const hourDif = dateNow.getHours() - date.getHours();\n      if (hourDif === 0) {\n        const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n        if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n        if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n        if (minutesDif >= 10 && minutesDif < 30) {\n          return \"10 минут назад\";\n        }\n        return \"30 минут назад\";\n      }\n      return `${date.getHours()}:${date.getMinutes()}`;\n    }\n\n    return `${date.getDay()} ${date.toLocaleString(\"default\", {\n      month: \"long\"\n    })}`;\n  }\n  return (\n    date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { getCurrentUserId, getUserById } from \"../../../store/users\";\nimport { useSelector } from \"react-redux\";\n\nconst Comment = ({\n  content,\n  created_at: created,\n  _id: id,\n  userId,\n  onRemove\n}) => {\n  const currentUserId = useSelector(getCurrentUserId());\n  const user = useSelector(getUserById(userId));\n\n  return (\n    <div className=\"bg-light card-body  mb-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"d-flex flex-start \">\n            <img\n              src={user.image}\n              className=\"rounded-circle shadow-1-strong me-3\"\n              alt=\"avatar\"\n              width=\"65\"\n              height=\"65\"\n            />\n            <div className=\"flex-grow-1 flex-shrink-1\">\n              <div className=\"mb-4\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <p className=\"mb-1 \">\n                    {user && user.name}{\" \"}\n                    <span className=\"small\">\n                                            - {displayDate(created)}\n                                        </span>\n                  </p>\n                  {currentUserId === userId && (\n                    <button\n                      className=\"btn btn-sm text-primary d-flex align-items-center\"\n                      onClick={() => onRemove(id)}\n                    >\n                      <i className=\"bi bi-x-lg\"></i>\n                    </button>\n                  )}\n                </div>\n                <p className=\"small mb-0\">{content}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nComment.propTypes = {\n  content: PropTypes.string,\n  edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  userId: PropTypes.string,\n  onRemove: PropTypes.func,\n  _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\n\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n  return comments.map((comment) => (\n    <Comment key={comment._id} {...comment} onRemove={onRemove}/>\n  ));\n};\nCommentsList.propTypes = {\n  comment: PropTypes.array,\n  onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor={name}> {label}</label>\n      <div className=\"input-group has-validation\">\n                <textarea\n                  id={name}\n                  name={name}\n                  value={value}\n                  onChange={handleChange}\n                  className={getInputClasses()}\n                />\n\n        {error && <div className=\"invalid-feedback \">{error}</div>}\n      </div>\n    </div>\n  );\n};\nTextAreaField.defaultProps = {\n  type: \"text\"\n};\nTextAreaField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n  const [data, setData] = useState({});\n  const [errors, setErrors] = useState({});\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const validatorConfog = {\n    content: {\n      isRequired: {\n        message: \"Сообщение не может быть пустым\"\n      }\n    }\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const clearForm = () => {\n    setData({});\n    setErrors({});\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    onSubmit(data);\n    console.log(data);\n    clearForm();\n  };\n\n  return (\n    <div>\n      <h2>New comment</h2>\n      <form onSubmit={handleSubmit}>\n        <TextAreaField\n          value={data.content || \"\"}\n          onChange={handleChange}\n          name=\"content\"\n          label=\"Сообщение\"\n          error={errors.content}\n        />\n        <div className=\"d-flex justify-content-end\">\n          <button className=\"btn btn-primary\">Опубликовать</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nAddCommentForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\n\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\n\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n  createComment: async (payload) => {\n    const { data } = await httpService.post(\n      commentEndpoint,\n      payload\n    );\n    return data;\n  },\n  getComments: async (pageId) => {\n    const { data } = await httpService.get(commentEndpoint, {\n      params: {\n        orderBy: \"pageId\",\n        equalTo: `${pageId}`\n      }\n    });\n    return data;\n  },\n  removeComment: async (commentId) => {\n    const { data } = await httpService.delete(commentEndpoint + commentId);\n    return data;\n  }\n};\nexport default commentService;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport commentService from \"../services/comment.service\";\n\nconst commentsSlice = createSlice({\n  name: \"comments\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null\n  },\n  reducers: {\n    commentsRequested: (state) => {\n      state.isLoading = true;\n    },\n    commentsReceved: (state, action) => {\n      state.entities = action.payload;\n      state.isLoading = false;\n    },\n    commentsRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    commetnCreated: (state, action) => {\n      state.entities.push(action.payload);\n    },\n    commentRemoved: (state, action) => {\n      state.entities = state.entities.filter(\n        (c) => c._id !== action.payload\n      );\n    }\n  }\n});\n\nconst { reducer: commentsReducer, actions } = commentsSlice;\nconst {\n  commentsRequested,\n  commentsReceved,\n  commentsRequestFiled,\n  commetnCreated,\n  commentRemoved\n} = actions;\n\nconst addCommentRequested = createAction(\"comments/addCommentRequested\");\nconst removeCommentRequested = createAction(\"comments/removeCommentRequested\");\n\nexport const loadCommentsList = (userId) => async (dispatch) => {\n  dispatch(commentsRequested());\n  try {\n    const { content } = await commentService.getComments(userId);\n    dispatch(commentsReceved(content));\n  } catch (error) {\n    dispatch(commentsRequestFiled(error.message));\n  }\n};\nexport const createComment = (payload) => async (dispatch, getState) => {\n  dispatch(addCommentRequested());\n  try {\n    const { content } = await commentService.createComment(payload);\n    dispatch(commetnCreated(content));\n  } catch (error) {\n    dispatch(commentsRequestFiled(error.message));\n  }\n};\nexport const removeComment = (commentId) => async (dispatch) => {\n  dispatch(removeCommentRequested());\n  try {\n    const { content } = await commentService.removeComment(commentId);\n    if (!content) {\n      dispatch(commentRemoved(commentId));\n    }\n  } catch (error) {\n    dispatch(commentsRequestFiled(error.message));\n  }\n};\n\nexport const getComments = () => (state) => state.comments.entities;\nexport const getCommentsLoadingStatus = () => (state) =>\n  state.comments.isLoading;\n\nexport default commentsReducer;\n","import { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport {\n  createComment,\n  getComments,\n  getCommentsLoadingStatus,\n  loadCommentsList,\n  removeComment\n} from \"../../store/comments\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n  const { userId } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCommentsList(userId));\n  }, [userId]);\n  const isLoading = useSelector(getCommentsLoadingStatus());\n\n  const comments = useSelector(getComments());\n  const handleSubmit = (data) => {\n    dispatch(createComment({ ...data, pageId: userId }));\n  };\n  const handleRemoveComment = (id) => {\n    dispatch(removeComment(id));\n  };\n  const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n  return (\n    <>\n      <div className=\"card mb-2\">\n        <div className=\"card-body \">\n          <AddCommentForm onSubmit={handleSubmit}/>\n        </div>\n      </div>\n      {sortedComments.length > 0 && (\n        <div className=\"card mb-3\">\n          <div className=\"card-body \">\n            <h2>Comments</h2>\n            <hr/>\n            {!isLoading ? (\n              <CommentsList\n                comments={sortedComments}\n                onRemove={handleRemoveComment}\n              />\n            ) : (\n              \"loading...\"\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\n\nimport { useSelector } from \"react-redux\";\nimport { getUserById } from \"../../../store/users\";\n\nconst UserPage = ({ userId }) => {\n  const user = useSelector(getUserById(userId));\n\n  if (user) {\n    return (\n      <div className=\"container\">\n        <div className=\"row gutters-sm\">\n          <div className=\"col-md-4 mb-3\">\n            <UserCard user={user}/>\n            <QualitiesCard data={user.qualities}/>\n            <MeetingsCard value={user.completedMeetings}/>\n          </div>\n          <div className=\"col-md-8\">\n            <Comments/>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <h1>Loading</h1>;\n  }\n};\n\nUserPage.propTypes = {\n  userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  const pages = _.range(1, pagesCount + 1);\n\n  if (pagesCount === 1) return null;\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={\n              \"page-item \" +\n              (page === currentPage ? \"active\" : \"\")\n            }\n          >\n            <a\n              className=\"page-link\"\n              onClick={() => {\n                onPageChange(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (!Array.isArray(items)) {\n    return (\n      <ul className=\"list-group\">\n        {Object.keys(items).map((item) => (\n          <li\n            key={items[item][valueProperty]}\n            className={\n              \"list-group-item\" +\n              (items[item] === selectedItem ? \" active\" : \"\")\n            }\n            onClick={() => onItemSelect(items[item])}\n            role=\"button\"\n          >\n            {items[item][contentProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          key={item[valueProperty]}\n          className={\n            \"list-group-item\" +\n            (item === selectedItem ? \" active\" : \"\")\n          }\n          onClick={() => onItemSelect(item)}\n          role=\"button\"\n        >\n          {item[contentProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchStatus = ({ length }) => {\n  const renderPhrase = (number) => {\n    const lastOne = Number(number.toString().slice(-1));\n    if (number > 4 && number < 15) {\n      return \"человек тусанет\";\n    }\n    if (lastOne === 1) return \"человек тусанет\";\n    if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n    return \"человек тусанет\";\n  };\n  return (\n    <h2>\n            <span\n              className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                  ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                  : \"Никто с тобой не тусанет\"}\n            </span>\n    </h2>\n  );\n};\nSearchStatus.propTypes = {\n  length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BookMark = ({ status, ...rest }) => {\n  return (\n    <button {...rest}>\n      <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n    </button>\n  );\n};\nBookMark.propTypes = {\n  status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component;\n      if (typeof component === \"function\") {\n        return component(item);\n      }\n      return component;\n    }\n    return _.get(item, columns[column].path);\n  };\n  return (\n    <tbody>\n    {data.map((item) => (\n      <tr key={item._id}>\n        {Object.keys(columns).map((column) => (\n          <td key={column}>{renderContent(item, column)}</td>\n        ))}\n      </tr>\n    ))}\n    </tbody>\n  );\n};\n\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n  const handleSort = (item) => {\n    if (selectedSort.path === item) {\n      onSort({\n        ...selectedSort,\n        order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      onSort({ path: item, order: \"asc\" });\n    }\n  };\n  const rendeSortArrow = (selectedSort, currentPath) => {\n    if (selectedSort.path === currentPath) {\n      if (selectedSort.order === \"asc\") {\n        return <i className=\"bi bi-caret-down-fill\"></i>;\n      } else {\n        return <i className=\"bi bi-caret-up-fill\"></i>;\n      }\n    }\n    return null;\n  };\n\n  return (\n    <thead>\n    <tr>\n      {Object.keys(columns).map((column) => (\n        <th\n          key={column}\n          onClick={\n            columns[column].path\n              ? () => handleSort(columns[column].path)\n              : undefined\n          }\n          {...{ role: columns[column].path && \"button\" }}\n          scope=\"col\"\n        >\n          {columns[column].name}{\" \"}\n          {rendeSortArrow(selectedSort, columns[column].path)}\n        </th>\n      ))}\n    </tr>\n    </thead>\n  );\n};\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n  return (\n    <table className=\"table\">\n      {children || (\n        <>\n          <TableHeader {...{ onSort, selectedSort, columns }} />\n          <TableBody {...{ columns, data }} />\n        </>\n      )}\n    </table>\n  );\n};\nTable.propTypes = {\n  onSort: PropTypes.func,\n  selectedSort: PropTypes.object,\n  columns: PropTypes.object,\n  data: PropTypes.array,\n  children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getProfessionbyId,\n  getProfessionsLoadingStatus\n} from \"../../store/professions\";\n\nconst Profession = ({ id }) => {\n  const isLoading = useSelector(getProfessionsLoadingStatus());\n  const prof = useSelector(getProfessionbyId(id));\n  if (!isLoading) {\n    return <p>{prof.name}</p>;\n  } else return \"loading ...\";\n};\nProfession.propTypes = {\n  id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n  users,\n  onSort,\n  selectedSort,\n  onToggleBookMark,\n  ...rest\n}) => {\n  const columns = {\n    name: {\n      path: \"name\",\n      name: \"Имя\",\n      component: (user) => (\n        <Link to={`/users/${user._id}`}>{user.name}</Link>\n      )\n    },\n    qualities: {\n      name: \"Качества\",\n      component: (user) => <Qualities qualities={user.qualities}/>\n    },\n    professions: {\n      name: \"Профессия\",\n      component: (user) => <Profession id={user.profession}/>\n    },\n    completedMeetings: {\n      path: \"completedMeetings\",\n      name: \"Встретился, раз\"\n    },\n    rate: { path: \"rate\", name: \"Оценка\" },\n    bookmark: {\n      path: \"bookmark\",\n      name: \"Избранное\",\n      component: (user) => (\n        <BookMark\n          status={user.bookmark}\n          onClick={() => onToggleBookMark(user._id)}\n        />\n      )\n    }\n  };\n  return (\n    <Table\n      onSort={onSort}\n      selectedSort={selectedSort}\n      columns={columns}\n      data={users}\n    />\n  );\n};\n\nUserTable.propTypes = {\n  users: PropTypes.array.isRequired,\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\n\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport {\n  getProfessions,\n  getProfessionsLoadingStatus\n} from \"../../../store/professions\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId, getUsersList } from \"../../../store/users\";\n\nconst UsersListPage = () => {\n  const users = useSelector(getUsersList());\n  const currentUserId = useSelector(getCurrentUserId());\n\n  const professions = useSelector(getProfessions());\n  const professionsLoading = useSelector(getProfessionsLoadingStatus());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n  const pageSize = 8;\n\n  const handleDelete = (userId) => {\n    console.log(\"delete user\");\n    // setUsers(users.filter((user) => user._id !== userId));\n  };\n  const handleToggleBookMark = (id) => {\n    const newArray = users.map((user) => {\n      if (user._id === id) {\n        return { ...user, bookmark: !user.bookmark };\n      }\n      return user;\n    });\n    // setUsers(newArray);\n    console.log(newArray);\n  };\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchQuery]);\n\n  const handleProfessionSelect = (item) => {\n    if (searchQuery !== \"\") setSearchQuery(\"\");\n    setSelectedProf(item);\n  };\n  const handleSearchQuery = ({ target }) => {\n    setSelectedProf(undefined);\n    setSearchQuery(target.value);\n  };\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n  const handleSort = (item) => {\n    setSortBy(item);\n  };\n\n  function filterUsers(data) {\n    const filteredUsers = searchQuery\n      ? data.filter(\n        (user) =>\n          user.name\n            .toLowerCase()\n            .indexOf(searchQuery.toLowerCase()) !== -1\n      )\n      : selectedProf\n        ? data.filter((user) => user.profession === selectedProf._id)\n        : data;\n    return filteredUsers.filter((u) => u._id !== currentUserId);\n  }\n\n  const filteredUsers = filterUsers(users);\n  const count = filteredUsers.length;\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n  const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n  const clearFilter = () => {\n    setSelectedProf();\n  };\n\n  return (\n    <div className=\"d-flex\">\n      {professions && !professionsLoading && (\n        <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n          <GroupList\n            selectedItem={selectedProf}\n            items={professions}\n            onItemSelect={handleProfessionSelect}\n          />\n          <button\n            className=\"btn btn-secondary mt-2\"\n            onClick={clearFilter}\n          >\n            Очиститть\n          </button>\n        </div>\n      )}\n      <div className=\"d-flex flex-column\">\n        <SearchStatus length={count}/>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          placeholder=\"Search...\"\n          onChange={handleSearchQuery}\n          value={searchQuery}\n        />\n        {count > 0 && (\n          <UserTable\n            users={usersCrop}\n            onSort={handleSort}\n            selectedSort={sortBy}\n            onDelete={handleDelete}\n            onToggleBookMark={handleToggleBookMark}\n          />\n        )}\n        <div className=\"d-flex justify-content-center\">\n          <Pagination\n            itemsCount={count}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataStatus, loadUsersList } from \"../../../store/users\";\n\nconst UsersLoader = ({ children }) => {\n  const dataStatus = useSelector(getDataStatus());\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!dataStatus) dispatch(loadUsersList());\n  }, []);\n  if (!dataStatus) return \"Loading\";\n  return children;\n};\n\nUsersLoader.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\nexport default UsersLoader;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UsersLoader from \"../components/ui/hoc/usersLoader\";\n\nimport { getCurrentUserId } from \"../store/users\";\n\nconst Users = () => {\n  const params = useParams();\n  const { userId, edit } = params;\n  const currentUserId = useSelector(getCurrentUserId());\n\n  return (\n    <>\n      <UsersLoader>\n        {userId ? (\n          edit ? (\n            userId === currentUserId ? (\n              <EditUserPage/>\n            ) : (\n              <Redirect to={`/users/${currentUserId}/edit`}/>\n            )\n          ) : (\n            <UserPage userId={userId}/>\n          )\n        ) : (\n          <UsersListPage/>\n        )}\n      </UsersLoader>\n    </>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n  const handleChange = () => {\n    onChange({ name: name, value: !value });\n  };\n  const getInputClasses = () => {\n    return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n  };\n  return (\n    <div className=\"form-check mb-4\">\n      <input\n        className={getInputClasses()}\n        type=\"checkbox\"\n        value=\"\"\n        id={name}\n        onChange={handleChange}\n        checked={value}\n      />\n      <label className=\"form-check-label \" htmlFor={name}>\n        {children}\n      </label>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nCheckBoxField.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\n\nconst LoginForm = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    stayOn: false\n  });\n  const loginError = useSelector(getAuthErrors());\n  const history = useHistory();\n  const dispath = useDispatch();\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfog = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателкн для заполнения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const redirect = history.location.state\n      ? history.location.state.from.pathname\n      : \"/\";\n\n    dispath(login({ payload: data, redirect }));\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Электронная почта\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Пароль\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <CheckBoxField\n        value={data.stayOn}\n        onChange={handleChange}\n        name=\"stayOn\"\n      >\n        Оставаться в системе\n      </CheckBoxField>\n      {loginError && <p className=\"text-danger\">{loginError}</p>}\n\n      <button\n        type=\"submit\"\n        disabled={!isValid}\n        className=\"btn btn-primary w-100 mx-auto\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    name: \"\",\n    qualities: [],\n    licence: false\n  });\n\n  const qualities = useSelector(getQualities());\n  const qualitiesList = qualities.map((q) => ({\n    label: q.name,\n    value: q._id\n  }));\n  const professions = useSelector(getProfessions());\n\n  const professionsList = professions.map((p) => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const validatorConfog = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\"\n      },\n      min: {\n        message: \"Имя должено состаять миниму из 3 символов\",\n        value: 3\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязательна для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состаять миниму из 8 символов\",\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\"\n      }\n    },\n    licence: {\n      isRequired: {\n        message:\n          \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value)\n    };\n    dispatch(signUp(newData));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Электронная почта\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Имя\"\n        name=\"name\"\n        value={data.name}\n        onChange={handleChange}\n        error={errors.name}\n      />\n      <TextField\n        label=\"Пароль\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <SelectField\n        label=\"Выбери свою профессию\"\n        defaultOption=\"Choose...\"\n        name=\"profession\"\n        options={professionsList}\n        onChange={handleChange}\n        value={data.profession}\n        error={errors.profession}\n      />\n      <RadioField\n        options={[\n          { name: \"Male\", value: \"male\" },\n          { name: \"Female\", value: \"female\" },\n          { name: \"Other\", value: \"other\" }\n        ]}\n        value={data.sex}\n        name=\"sex\"\n        onChange={handleChange}\n        label=\"Выберите ваш пол\"\n      />\n      <MultiSelectField\n        options={qualitiesList}\n        onChange={handleChange}\n        name=\"qualities\"\n        label=\"Выберите ваши качесвта\"\n      />\n      <CheckBoxField\n        value={data.licence}\n        onChange={handleChange}\n        name=\"licence\"\n        error={errors.licence}\n      >\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckBoxField>\n      <button\n        type=\"submit\"\n        disabled={!isValid}\n        className=\"btn btn-primary w-100 mx-auto\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n  const { type } = useParams();\n  const [formType, setFormType] = useState(\n    type === \"register\" ? type : \"login\"\n  );\n  const toggleFormType = (params) => {\n    setFormType((prevState) =>\n      prevState === \"register\" ? \"login\" : \"register\"\n    );\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {formType === \"register\" ? (\n            <>\n              <h3 className=\"mb-4\">Register</h3>\n              <RegisterForm/>\n              <p>\n                Already have account?{\" \"}\n                <a role=\"button\" onClick={toggleFormType}>\n                  {\" \"}\n                  Sign In\n                </a>\n              </p>\n            </>\n          ) : (\n            <>\n              <h3 className=\"mb-4\">Login</h3>\n              <LoginForm/>\n              <p>\n                Dont have account?{\" \"}\n                <a role=\"button\" onClick={toggleFormType}>\n                  {\" \"}\n                  Sign Up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\n\nconst useMockData = () => {\n  const statusConsts = {\n    idle: \"Not Started\",\n    pending: \"In Process\",\n    successed: \"Ready\",\n    error: \"Error occured\"\n  };\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(statusConsts.idle);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(0);\n  const summuryCount = professions.length + qualities.length + users.length;\n  const incrementCount = () => {\n    setCount((prevState) => prevState + 1);\n  };\n  const updateProgress = () => {\n    if (count !== 0 && status === statusConsts.idle) {\n      setStatus(statusConsts.pending);\n    }\n    const newProgress = Math.floor((count / summuryCount) * 100);\n    if (progress < newProgress) {\n      setProgress(() => newProgress);\n    }\n    if (newProgress === 100) {\n      setStatus(statusConsts.successed);\n    }\n  };\n\n  useEffect(() => {\n    updateProgress();\n  }, [count]);\n\n  async function initialize() {\n    try {\n      for (const prof of professions) {\n        await httpService.put(\"profession/\" + prof._id, prof);\n        incrementCount();\n      }\n      for (const user of users) {\n        await httpService.put(\"user/\" + user._id, user);\n        incrementCount();\n      }\n      for (const qual of qualities) {\n        await httpService.put(\"quality/\" + qual._id, qual);\n        incrementCount();\n      }\n    } catch (error) {\n      setError(error);\n      setStatus(statusConsts.error);\n    }\n  }\n\n  return { error, initialize, progress, status };\n};\n\nexport default useMockData;\n","import React from \"react\";\nimport useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n  const { error, initialize, progress, status } = useMockData();\n  const handleClick = () => {\n    initialize();\n  };\n  return (\n    <div className=\"container mt-5\">\n      <h1> Main Page</h1>\n      <h3>Инициализация данных в FireBase</h3>\n      <ul>\n        <li>Status:{status}</li>\n        <li>Progress: {progress}%</li>\n        {error && <li>error: {error}</li>}\n      </ul>\n      <button className=\"btn btn-primary\" onClick={handleClick}>\n        {\" \"}\n        Инициализировать\n      </button>\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUserData } from \"../../store/users\";\n\nconst NavProfile = () => {\n  const currentUser = useSelector(getCurrentUserData());\n  const [isOpen, setOpen] = useState(false);\n  const toggleMenu = () => {\n    setOpen((prevState) => !prevState);\n  };\n\n  if (!currentUser) return \"loading\";\n  return (\n    <div className=\"dropdown\" onClick={toggleMenu}>\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\n        <div className=\"me-2\">{currentUser.name}</div>\n        <img\n          src={currentUser.image}\n          alt=\"\"\n          height=\"40\"\n          className=\"img-responsive rounded-circle\"\n        />\n      </div>\n      <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\n        <Link\n          to={`/users/${currentUser._id}`}\n          className=\"dropdown-item\"\n        >\n          Profile\n        </Link>\n        <Link to=\"/logout\" className=\"dropdown-item\">\n          Log Out\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NavProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getIsLoggedIn } from \"../../store/users\";\nimport NavProfile from \"./navProfile\";\n\nconst NavBar = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn());\n  return (\n    <nav className=\"navbar bg-light mb-3\">\n      <div className=\"container-fluid\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n              Main\n            </Link>\n          </li>\n          {isLoggedIn && (\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link \"\n                aria-current=\"page\"\n                to=\"/users\"\n              >\n                Users\n              </Link>\n            </li>\n          )}\n        </ul>\n        <div className=\"d-flex\">\n          {isLoggedIn ? (\n            <NavProfile/>\n          ) : (\n            <Link\n              className=\"nav-link \"\n              aria-current=\"page\"\n              to=\"/login\"\n            >\n              Login\n            </Link>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\n\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn());\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!isLoggedIn) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n        return Component ? <Component {...props} /> : children;\n      }}\n    />\n  );\n};\nProtectedRoute.propTypes = {\n  component: PropTypes.func,\n  location: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../store/users\";\n\nconst LogOut = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"logout\");\n    dispatch(logOut());\n  }, []);\n  return <h1>Loading</h1>;\n};\n\nexport default LogOut;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getIsLoggedIn,\n  getUsersLoadingStatus,\n  loadUsersList\n} from \"../../../store/users\";\nimport { loadQualitiesList } from \"../../../store/qualities\";\nimport { loadProfessionsList } from \"../../../store/professions\";\n\nconst AppLoader = ({ children }) => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(getIsLoggedIn());\n  const usersStatusLoading = useSelector(getUsersLoadingStatus());\n  useEffect(() => {\n    dispatch(loadQualitiesList());\n    dispatch(loadProfessionsList());\n    if (isLoggedIn) {\n      dispatch(loadUsersList());\n    }\n  }, [isLoggedIn]);\n  if (usersStatusLoading) return \"loading\";\n  return children;\n};\n\nAppLoader.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\nexport default AppLoader;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LogOut from \"./layouts/logOut\";\nimport AppLoader from \"./components/ui/hoc/appLoader\";\n\nfunction App() {\n  return (\n    <div>\n      <AppLoader>\n        <NavBar/>\n        <Switch>\n          <ProtectedRoute\n            path=\"/users/:userId?/:edit?\"\n            component={Users}\n          />\n          <Route path=\"/login/:type?\" component={Login}/>\n          <Route path=\"/logout\" component={LogOut}/>\n          <Route path=\"/\" exact component={Main}/>\n          <Redirect to=\"/\"/>\n        </Switch>\n      </AppLoader>\n      <ToastContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import commentsReducer from \"./comments\";\nimport professionsReducer from \"./professions\";\nimport qualitiesReducer from \"./qualities\";\nimport usersReducer from \"./users\";\n\nconst { combineReducers, configureStore } = require(\"@reduxjs/toolkit\");\n\nconst rootReducer = combineReducers({\n  qualities: qualitiesReducer,\n  professions: professionsReducer,\n  users: usersReducer,\n  comments: commentsReducer\n});\n\nexport function createStore() {\n  return configureStore({\n    reducer: rootReducer\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { Router } from \"react-router-dom\";\nimport { createStore } from \"./app/store/createStore\";\nimport { Provider } from \"react-redux\";\nimport history from \"./app/utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App/>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}